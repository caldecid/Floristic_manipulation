#####collapsing the list in a df
df_ipni_families <- do.call("rbind.fill", list_fam_IPNI) %>%
select(any_of(c("family", "genus", "species",
"authors", "citationType",
"rank", "hybrid", "reference",
"publication", "publicationYear",
"referenceCollation",
"publicationId", "suppressed",
"typeLocations", "collectorTeam",
"collectionNumber", "collectionDate1",
"distribution", "locality", "id",
"fqld", "inPowo", "wfold", "bhlLink",
"publicationYearNote", "remarks",
"referenceRemarks")))%>%
mutate(url = paste0("www.ipni.org/n/", id))
##working with the columns
df_ipni_families$citationType <- "tax_nov"
df_ipni_families$source <- "IPNI"
rownames(df_ipni_families) <- NULL
##generating species names for further merging
df_ipni_families$name <- str_c(df_ipni_families$genus,
df_ipni_families$species, sep = "_")
##eliminating duplicated species
df_ipni_families <- df_ipni_families[-which(duplicated(df_ipni_families$name)),]
###########################POWO###############################################
##loop for finding missing species in the Flora de Brasil
for(i in seq_along(fam_names)){
###tryCatch for handling the missing families in POWO
tryCatch({
##calling the species within families in POWO
powo_df = tidy(search_powo(list(family = fam_names[i],
distribution = "Brazil"),
limit = 1000,
filters = c("species", "accepted")))
return(powo_df)
}, error = function(e){
message("Absent family in POWO")
print(e)
})
#arranging taxa names
powo_df$name = str_replace(powo_df$name, " ", "_")
##POWO species absent in Flora de Brasil
powo_abs = powo_df[-which(powo_df$name %in% angiosperms_bra$taxon_name), ]
##if else statement for not saving empty dfs
if(dim(powo_abs)[1] == 0){
print("No absent species in Flora de Brasil")
} else{
powo_abs[,c('genus', 'species')] = str_split_fixed(powo_abs$name, '_', 2)
powo_abs = powo_abs %>% relocate(family, genus, species, author)
##inserting a df inside each list with the missing species in the
list_fam_POWO[[i]] = powo_abs
}
}
###removing null elements
list_fam_POWO = list_fam_POWO[-which(sapply(list_fam_POWO, is.null))]
##collapsing the list in a df
df_powo_families <- do.call("rbind", list_fam_POWO)
rownames(df_powo_families) <- NULL
##Source
df_powo_families$source <- "POWO"
##merging dataframes, not repeating species from both repositories
df_missing_flora <- rbind.fill(df_ipni_families,
df_powo_families[!df_powo_families$name %in% df_ipni_families$name,])
return(df_missing_flora)
}
angio = read_excel("Data/Raw/datasheet_angiosperms_07Nov2023.xlsx")
x = angio[1:3000,]
y = missing_FFB_function(df = x)
View(y)
View(y)
missing_FFB_function <- function(df){
##assigning
angiosperms_bra = df
##angiosperms, filling information, dropping NA, and creating tax_name
angiosperms_bra <- angiosperms_bra %>% fill(Família, Gênero) %>%
drop_na(Espécie) %>%
unite("taxon_name",
Gênero:Espécie,
sep = "_", remove = FALSE) %>%
filter(Status == "Nome aceito")
##family names
fam_names <- unique(angiosperms_bra$Família)
######creating list for keeping the missing species within each family according to IPNI
list_fam_IPNI <- vector("list", length = length(fam_names))
######creating list for keeping the missing species within each family according to POWO
list_fam_POWO <- vector("list", length = length(fam_names))
##naming
names(list_fam_IPNI) <- fam_names
names(list_fam_POWO) <- fam_names
###################IPNI######################################
##loop for finding missing species in the Flora de Brasil
for(i in seq_along(fam_names)){
###tryCatch for handling the missing families in IPNI
tryCatch({
##calling the species within families in IPNI
ipni_df = tidy(search_ipni(list(family = fam_names[i],
distribution = "Brazil"),
limit = 1000,
filters = c("species")))
return(ipni_df)
}, error = function(e){
message("Absent family in IPNI")
print(e)
})
#arranging taxa names
ipni_df$name = str_replace(ipni_df$name, " ", "_")
##IPNI species absent in Flora de Brasil
ipni_abs = ipni_df[-which(ipni_df$name %in% angiosperms_bra$taxon_name), ]
##if else statement for not saving empty dfs
if(dim(ipni_abs)[1] == 0){
print("No absent species in Flora de Brasil")
} else{
##inserting a df inside each list with the missing species in the Flora Brazil
list_fam_IPNI[[i]] = ipni_abs
}
}
###removing null elements
list_fam_IPNI = list_fam_IPNI[-which(sapply(list_fam_IPNI, is.null))]
#####collapsing the list in a df
df_ipni_families <- do.call("rbind.fill", list_fam_IPNI) %>%
select(any_of(c("family", "genus", "species",
"authors", "citationType",
"rank", "hybrid", "reference",
"publication", "publicationYear",
"referenceCollation",
"publicationId", "suppressed",
"typeLocations", "collectorTeam",
"collectionNumber", "collectionDate1",
"distribution", "locality", "id",
"fqld", "inPowo", "wfold", "bhlLink",
"publicationYearNote", "remarks",
"referenceRemarks")))%>%
mutate(url = paste0("www.ipni.org/n/", id))
##working with the columns
df_ipni_families$citationType <- "tax_nov"
df_ipni_families$source <- "IPNI"
rownames(df_ipni_families) <- NULL
##generating species names for further merging
df_ipni_families$name <- str_c(df_ipni_families$genus,
df_ipni_families$species, sep = "_")
##eliminating duplicated species
df_ipni_families <- df_ipni_families[-which(duplicated(df_ipni_families$name)),]
###########################POWO###############################################
##loop for finding missing species in the Flora de Brasil
for(i in seq_along(fam_names)){
###tryCatch for handling the missing families in POWO
tryCatch({
##calling the species within families in POWO
powo_df = tidy(search_powo(list(family = fam_names[i],
distribution = "Brazil"),
limit = 1000,
filters = c("species", "accepted")))
return(powo_df)
}, error = function(e){
message("Absent family in POWO")
print(e)
})
#arranging taxa names
powo_df$name = str_replace(powo_df$name, " ", "_")
##POWO species absent in Flora de Brasil
powo_abs = powo_df[-which(powo_df$name %in% angiosperms_bra$taxon_name), ]
##if else statement for not saving empty dfs
if(dim(powo_abs)[1] == 0){
print("No absent species in Flora de Brasil")
} else{
powo_abs[,c('genus', 'species')] = str_split_fixed(powo_abs$name, '_', 2)
powo_abs = powo_abs %>% relocate(family, genus, species, author)
##inserting a df inside each list with the missing species in the
list_fam_POWO[[i]] = powo_abs
}
}
###removing null elements
list_fam_POWO = list_fam_POWO[-which(sapply(list_fam_POWO, is.null))]
##collapsing the list in a df
df_powo_families <- do.call("rbind", list_fam_POWO)
rownames(df_powo_families) <- NULL
##Source
df_powo_families$source <- "POWO"
##merging dataframes, not repeating species from both repositories
df_missing_flora <- rbind.fill(df_ipni_families,
df_powo_families[!df_powo_families$name %in% df_ipni_families$name,])
return(df_missing_flora)
}
y = missing_FFB_function(df = x)
View(y)
colnames(df)
colnames(x)
x = angio[10000:12000,]
View(x)
y = missing_FFB_function(df = x)
View(y)
df = x
##assigning
angiosperms_bra = df
##angiosperms, filling information, dropping NA, and creating tax_name
angiosperms_bra <- angiosperms_bra %>% fill(Família, Gênero) %>%
drop_na(Espécie) %>%
unite("taxon_name",
Gênero:Espécie,
sep = "_", remove = FALSE) %>%
filter(Status == "Nome aceito")
##family names
fam_names <- unique(angiosperms_bra$Família)
######creating list for keeping the missing species within each family according to IPNI
list_fam_IPNI <- vector("list", length = length(fam_names))
######creating list for keeping the missing species within each family according to POWO
list_fam_POWO <- vector("list", length = length(fam_names))
##naming
names(list_fam_IPNI) <- fam_names
names(list_fam_POWO) <- fam_names
##loop for finding missing species in the Flora de Brasil
for(i in seq_along(fam_names)){
###tryCatch for handling the missing families in IPNI
tryCatch({
##calling the species within families in IPNI
ipni_df = tidy(search_ipni(list(family = fam_names[i],
distribution = "Brazil"),
limit = 1000,
filters = c("species")))
return(ipni_df)
}, error = function(e){
message("Absent family in IPNI")
print(e)
})
#arranging taxa names
ipni_df$name = str_replace(ipni_df$name, " ", "_")
##IPNI species absent in Flora de Brasil
ipni_abs = ipni_df[-which(ipni_df$name %in% angiosperms_bra$taxon_name), ]
##if else statement for not saving empty dfs
if(dim(ipni_abs)[1] == 0){
print("No absent species in Flora de Brasil")
} else{
##inserting a df inside each list with the missing species in the Flora Brazil
list_fam_IPNI[[i]] = ipni_abs
}
}
missing_FFB_function <- function(df){
##assigning
angiosperms_bra = df
##angiosperms, filling information, dropping NA, and creating tax_name
angiosperms_bra <- angiosperms_bra %>% fill(Família, Gênero) %>%
drop_na(Espécie) %>%
unite("taxon_name",
Gênero:Espécie,
sep = "_", remove = FALSE) %>%
filter(Status == "Nome aceito")
##family names
fam_names <- unique(angiosperms_bra$Família)
######creating list for keeping the missing species within each family according to IPNI
list_fam_IPNI <- vector("list", length = length(fam_names))
######creating list for keeping the missing species within each family according to POWO
list_fam_POWO <- vector("list", length = length(fam_names))
##naming
names(list_fam_IPNI) <- fam_names
names(list_fam_POWO) <- fam_names
###################IPNI######################################
##loop for finding missing species in the Flora de Brasil
for(i in seq_along(fam_names)){
###tryCatch for handling the missing families in IPNI
tryCatch({
##calling the species within families in IPNI
ipni_df = tidy(search_ipni(list(family = fam_names[i],
distribution = "Brazil"),
limit = 1000,
filters = c("species")))
ipni_df
}, error = function(e){
message("Absent family in IPNI")
print(e)
})
#arranging taxa names
ipni_df$name = str_replace(ipni_df$name, " ", "_")
##IPNI species absent in Flora de Brasil
ipni_abs = ipni_df[-which(ipni_df$name %in% angiosperms_bra$taxon_name), ]
##if else statement for not saving empty dfs
if(dim(ipni_abs)[1] == 0){
print("No absent species in Flora de Brasil")
} else{
##inserting a df inside each list with the missing species in the Flora Brazil
list_fam_IPNI[[i]] = ipni_abs
}
}
###removing null elements
list_fam_IPNI = list_fam_IPNI[-which(sapply(list_fam_IPNI, is.null))]
#####collapsing the list in a df
df_ipni_families <- do.call("rbind.fill", list_fam_IPNI) %>%
select(any_of(c("family", "genus", "species",
"authors", "citationType",
"rank", "hybrid", "reference",
"publication", "publicationYear",
"referenceCollation",
"publicationId", "suppressed",
"typeLocations", "collectorTeam",
"collectionNumber", "collectionDate1",
"distribution", "locality", "id",
"fqld", "inPowo", "wfold", "bhlLink",
"publicationYearNote", "remarks",
"referenceRemarks")))%>%
mutate(url = paste0("www.ipni.org/n/", id))
##working with the columns
df_ipni_families$citationType <- "tax_nov"
df_ipni_families$source <- "IPNI"
rownames(df_ipni_families) <- NULL
##generating species names for further merging
df_ipni_families$name <- str_c(df_ipni_families$genus,
df_ipni_families$species, sep = "_")
##eliminating duplicated species
df_ipni_families <- df_ipni_families[-which(duplicated(df_ipni_families$name)),]
###########################POWO###############################################
##loop for finding missing species in the Flora de Brasil
for(i in seq_along(fam_names)){
###tryCatch for handling the missing families in POWO
tryCatch({
##calling the species within families in POWO
powo_df = tidy(search_powo(list(family = fam_names[i],
distribution = "Brazil"),
limit = 1000,
filters = c("species", "accepted")))
powo_df
}, error = function(e){
message("Absent family in POWO")
print(e)
})
#arranging taxa names
powo_df$name = str_replace(powo_df$name, " ", "_")
##POWO species absent in Flora de Brasil
powo_abs = powo_df[-which(powo_df$name %in% angiosperms_bra$taxon_name), ]
##if else statement for not saving empty dfs
if(dim(powo_abs)[1] == 0){
print("No absent species in Flora de Brasil")
} else{
powo_abs[,c('genus', 'species')] = str_split_fixed(powo_abs$name, '_', 2)
powo_abs = powo_abs %>% relocate(family, genus, species, author)
##inserting a df inside each list with the missing species in the
list_fam_POWO[[i]] = powo_abs
}
}
###removing null elements
list_fam_POWO = list_fam_POWO[-which(sapply(list_fam_POWO, is.null))]
##collapsing the list in a df
df_powo_families <- do.call("rbind", list_fam_POWO)
rownames(df_powo_families) <- NULL
##Source
df_powo_families$source <- "POWO"
##merging dataframes, not repeating species from both repositories
df_missing_flora <- rbind.fill(df_ipni_families,
df_powo_families[!df_powo_families$name %in% df_ipni_families$name,])
return(df_missing_flora)
}
df
x
y = missing_FFB_function(df = x)
View(y)
##assigning
angiosperms_bra = df
##angiosperms, filling information, dropping NA, and creating tax_name
angiosperms_bra <- angiosperms_bra %>% fill(Família, Gênero) %>%
drop_na(Espécie) %>%
unite("taxon_name",
Gênero:Espécie,
sep = "_", remove = FALSE) %>%
filter(Status == "Nome aceito")
View(angiosperms_bra)
View(df)
x = angio %>%  fill(Família, Gênero) %>% drop_na(Espécie)
View(x)
x = x[11000:12000, ]
y <- missing_FFB_function(df = x)
View(y)
complete_angio_df <- function(df){
angiosperms_bra <- df %>% fill(Família, Gênero) %>%
drop_na(Espécie) %>%
unite("taxon_name",
Gênero:Espécie,
sep = "_", remove = FALSE) %>%
filter(Status == "Nome aceito")
return(angiosperms_bra)
}
x = angio[1:5000,]
y = complete_angio_df(df = x)
View(y)
missing_FFB_function <- function(df){
##completing dataframe information (auxiliary function)
angiosperms_bra = complete_angio_df(df = df)
##family names
fam_names <- unique(angiosperms_bra$Família)
######creating list for keeping the missing species within each family according to IPNI
list_fam_IPNI <- vector("list", length = length(fam_names))
######creating list for keeping the missing species within each family according to POWO
list_fam_POWO <- vector("list", length = length(fam_names))
##naming
names(list_fam_IPNI) <- fam_names
names(list_fam_POWO) <- fam_names
###################IPNI######################################
##loop for finding missing species in the Flora de Brasil
for(i in seq_along(fam_names)){
###tryCatch for handling the missing families in IPNI
tryCatch({
##calling the species within families in IPNI
ipni_df = tidy(search_ipni(list(family = fam_names[i],
distribution = "Brazil"),
limit = 1000,
filters = c("species")))
ipni_df
}, error = function(e){
message("Absent family in IPNI")
print(e)
})
#arranging taxa names
ipni_df$name = str_replace(ipni_df$name, " ", "_")
##IPNI species absent in Flora de Brasil
ipni_abs = ipni_df[-which(ipni_df$name %in% angiosperms_bra$taxon_name), ]
##if else statement for not saving empty dfs
if(dim(ipni_abs)[1] == 0){
print("No absent species in Flora de Brasil")
} else{
##inserting a df inside each list with the missing species in the Flora Brazil
list_fam_IPNI[[i]] = ipni_abs
}
}
###removing null elements
list_fam_IPNI = list_fam_IPNI[-which(sapply(list_fam_IPNI, is.null))]
#####collapsing the list in a df
df_ipni_families <- do.call("rbind.fill", list_fam_IPNI) %>%
select(any_of(c("family", "genus", "species",
"authors", "citationType",
"rank", "hybrid", "reference",
"publication", "publicationYear",
"referenceCollation",
"publicationId", "suppressed",
"typeLocations", "collectorTeam",
"collectionNumber", "collectionDate1",
"distribution", "locality", "id",
"fqld", "inPowo", "wfold", "bhlLink",
"publicationYearNote", "remarks",
"referenceRemarks")))%>%
mutate(url = paste0("www.ipni.org/n/", id))
##working with the columns
df_ipni_families$citationType <- "tax_nov"
df_ipni_families$source <- "IPNI"
rownames(df_ipni_families) <- NULL
##generating species names for further merging
df_ipni_families$name <- str_c(df_ipni_families$genus,
df_ipni_families$species, sep = "_")
##eliminating duplicated species
df_ipni_families <- df_ipni_families[-which(duplicated(df_ipni_families$name)),]
###########################POWO###############################################
##loop for finding missing species in the Flora de Brasil
for(i in seq_along(fam_names)){
###tryCatch for handling the missing families in POWO
tryCatch({
##calling the species within families in POWO
powo_df = tidy(search_powo(list(family = fam_names[i],
distribution = "Brazil"),
limit = 1000,
filters = c("species", "accepted")))
powo_df
}, error = function(e){
message("Absent family in POWO")
print(e)
})
#arranging taxa names
powo_df$name = str_replace(powo_df$name, " ", "_")
##POWO species absent in Flora de Brasil
powo_abs = powo_df[-which(powo_df$name %in% angiosperms_bra$taxon_name), ]
##if else statement for not saving empty dfs
if(dim(powo_abs)[1] == 0){
print("No absent species in Flora de Brasil")
} else{
powo_abs[,c('genus', 'species')] = str_split_fixed(powo_abs$name, '_', 2)
powo_abs = powo_abs %>% relocate(family, genus, species, author)
##inserting a df inside each list with the missing species in the
list_fam_POWO[[i]] = powo_abs
}
}
###removing null elements
list_fam_POWO = list_fam_POWO[-which(sapply(list_fam_POWO, is.null))]
##collapsing the list in a df
df_powo_families <- do.call("rbind", list_fam_POWO)
rownames(df_powo_families) <- NULL
##Source
df_powo_families$source <- "POWO"
##merging dataframes, not repeating species from both repositories
df_missing_flora <- rbind.fill(df_ipni_families,
df_powo_families[!df_powo_families$name %in% df_ipni_families$name,])
return(df_missing_flora)
}
x = angio[1:8000,]
y = missing_FFB_function(df = x)
View(y)
x.1 = complete_angio_df(x)
x.1$taxon_name
which(x.1$taxon_name %in% y$name)
which(y$name %in% x.1$taxon_name)
y$name
sep_fam_function <- function(df_final) {
##defining names of families
fam_names <- unique(df_final$family)
##number of families
fam_num <- length(fam_names)
##list
list_final <- vector(mode = "list", length = fam_num)
for(i in 1:fam_num){
list_final[[i]] <- df_final %>% filter(family == fam_names[i])
}
return(list_final)
}
View(y)
list_y <- sep_fam_function(df_final = y)
View(list_y)
list_y[[10]]
list_y[[2]]
