######Calling missing ipni/powo
names.final.family = list.files(path = "Data/Processed/Angiosperms/final_family")
list.final = vector("list", length = length(names.final.family))
#preempting the list
for(i in seq_along(names.final.family)){
list.final[[i]] = read_csv(file = paste0("Data/Processed/Angiosperms/final_family/",
names.final.family[i]))
}
final_df = do.call("rbind.fill", list.final)
View(final_df)
final_df$taxon_name <- str_replace(final_df$taxon_name, "_", " ")
final_hifen = final_df$taxon_name[str_detect(final_df$taxon_name,"-")]
final_hifen
final_hifen_df = final_df %>% filter(taxon_name %in% final_hifen)
View(final_hifen_df)
##family names
fam_names <- unique(angiosperms_bra$Família)
list_powo_hifen_absent_in_FFB <- vector("list", length = length(fam_names))
list_IPNI_hifen_absent_in_FFB <- vector("list", length = length(fam_names))
list_FFB_hifen_absent_in_powo <- vector("list", length = length(fam_names))
list_FFB_hifen_absent_in_IPNI <- vector("list", length = length(fam_names))
##naming
names(list_powo_hifen_absent_in_FFB) <- fam_names
names(list_IPNI_hifen_absent_in_FFB) <- fam_names
names(list_FFB_hifen_absent_in_powo) <- fam_names
names(list_FFB_hifen_absent_in_IPNI) <- fam_names
##mergin genus and species for taxon name due to some hifens between both in the ipni and powo
for(i in seq_along(fam_names)){
##filtering the FFB by family name
FFB_df = angiosperms_bra %>% filter(Família == fam_names[i])
##only species with hifen
FFB_hifen = FFB_df$taxon_name[which(str_detect(FFB_df$taxon_name,
"-"))]
##filtering
FFB_hifen_df = FFB_df %>% filter(taxon_name %in% FFB_hifen)
tryCatch({
##powo dataframe filtered by family
df_powo = tidy(search_powo(list(family = fam_names[i],
distribution = "Brazil"),
limit = 1000,
filters = c("species", "accepted")))
##species with hifen
powo_hifen = df_powo$name[which(str_detect(df_powo$name,
"-"))]
#filtering
powo_hifen_df = df_powo %>% filter(name %in% powo_hifen)
########IPNI dataframe filtered by family
df_IPNI = tidy(search_ipni(list(family = fam_names[i],
distribution = "Brazil"),
limit = 1000,
filters = c("species")))
##which species have hifen
IPNI_hifen = df_IPNI$name[which(str_detect(df_IPNI$name,
"-"))]
#filtering
IPNI_hifen_df = df_IPNI %>% filter(name %in% IPNI_hifen)
}, error = function(e){
message("Absent family in IPNI or POWO")
print(e)
})
############Obtaining dataframes############
##which is in the powo df but it is not in the FFB df
list_powo_hifen_absent_in_FFB[[i]] <- powo_hifen_df[which(powo_hifen_df$name %in%
setdiff(powo_hifen_df$name,FFB_hifen_df$taxon_name)),]
##which is in the FFB but it is not in the powo df
list_FFB_hifen_absent_in_powo[[i]] <- FFB_hifen_df[which(FFB_hifen_df$taxon_name %in%
setdiff(FFB_hifen_df$taxon_name,powo_hifen_df$name)),]
##which is in the IPNI df but it is not in the FFB df
list_IPNI_hifen_absent_in_FFB[[i]] <- IPNI_hifen_df[which(IPNI_hifen_df$name %in%
setdiff(IPNI_hifen_df$name,FFB_hifen_df$taxon_name)),]
###Which in the FFB but it is not in the IPNI DF
list_FFB_hifen_absent_in_IPNI[[i]] <- FFB_hifen_df[which(FFB_hifen_df$taxon_name %in%
setdiff(FFB_hifen_df$taxon_name,IPNI_hifen_df$name)),]
}
##eliminating empty elements
list_powo_hifen_absent_in_FFB = list_drop_empty(list_powo_hifen_absent_in_FFB)
list_FFB_hifen_absent_in_powo = list_drop_empty(list_FFB_hifen_absent_in_powo)
list_IPNI_hifen_absent_in_FFB = list_drop_empty(list_IPNI_hifen_absent_in_FFB)
list_FFB_hifen_absent_in_IPNI = list_drop_empty(list_FFB_hifen_absent_in_IPNI)
##transforming in a dataset
POWO_hifen_absent_FFB = do.call("rbind", list_powo_hifen_absent_in_FFB)
FFB_hifen_absent_POWO = do.call("rbind", list_FFB_hifen_absent_in_powo)
IPNI_hifen_absent_FFB = do.call("rbind.fill", list_IPNI_hifen_absent_in_FFB)
FFB_hifen_absent_IPNI = do.call("rbind", list_FFB_hifen_absent_in_IPNI)
##eliminating rownames
rownames(POWO_hifen_absent_FFB) = NULL
rownames(FFB_hifen_absent_POWO) = NULL
rownames(IPNI_hifen_absent_FFB) = NULL
rownames(FFB_hifen_absent_IPNI) = NULL
##source
POWO_hifen_absent_FFB$source = "POWO"
IPNI_hifen_absent_FFB$source = "IPNI"
##merging POWO and IPNI dataframes
hifen_absent_FFB = rbind.fill(POWO_hifen_absent_FFB, IPNI_hifen_absent_FFB)
##removing duplicated lines
hifen_absent_FFB_distinct = distinct(hifen_absent_FFB, name,
.keep_all = TRUE)
View(hifen_absent_FFB_distinct)
setdiff(angiosperms_bra$taxon_name, hifen_absent_FFB_distinct$name)
setdiff(hifen_absent_FFB_distinct$name, angiosperms_bra$taxon_name)
setdiff(hifen_absent_FFB_distinct$name, final_hifen_df$taxon_name)
setdiff( final_hifen_df$taxon_name, hifen_absent_FFB_distinct$name)
powo_hifen_df[which(powo_hifen_df$name %in%
setdiff(powo_hifen_df$name,FFB_hifen_df$taxon_name)),]
FFB_hifen_df[which(FFB_hifen_df$taxon_name %in%
setdiff(FFB_hifen_df$taxon_name,powo_hifen_df$name)),]
###merging FFB datasets
FFB_hifen_absent_in_POWO$absent = "POWO"
FFB_hifen_absent_in_IPNI$absent = "IPNI"
hifen_absent_powo_and_ipni = rbind.fill(FFB_hifen_absent_in_POWO,
FFB_hifen_absent_in_IPNI)
View(hifen_absent_powo_and_ipni)
list_FFB_hifen_absent_in_powo = list_drop_empty(list_FFB_hifen_absent_in_powo)
list_FFB_hifen_absent_in_IPNI = list_drop_empty(list_FFB_hifen_absent_in_IPNI)
FFB_hifen_absent_POWO = do.call("rbind", list_FFB_hifen_absent_in_powo)
FFB_hifen_absent_IPNI = do.call("rbind", list_FFB_hifen_absent_in_IPNI)
FFB_hifen_absent_POWO
FFB_hifen_absent_IPNI = do.call("rbind", list_FFB_hifen_absent_in_IPNI)
hifen_absent_powo_and_ipni = rbind.fill(FFB_hifen_absent_in_POWO,
FFB_hifen_absent_in_IPNI)
View(hifen_absent_powo_and_ipni)
View(FFB_hifen_absent_in_POWO)
View(FFB_hifen_absent_IPNI)
FFB_hifen_absent_in_IPNI
list_FFB_hifen_absent_in_IPNI = list_drop_empty(list_FFB_hifen_absent_in_IPNI)
IPNI_hifen_absent_FFB = do.call("rbind.fill", list_IPNI_hifen_absent_in_FFB)
rownames(FFB_hifen_absent_POWO) = NULL
rownames(FFB_hifen_absent_IPNI) = NULL
###merging FFB datasets
FFB_hifen_absent_POWO$absent = "POWO"
FFB_hifen_absent_IPNI$absent = "IPNI"
hifen_absent_powo_and_ipni = rbind.fill(FFB_hifen_absent_POWO,
FFB_hifen_absent_IPNI)
View(hifen_absent_powo_and_ipni)
View(hifen_absent_powo_and_ipni)
##removing duplicated lines
hifen_absent_powo_and_ipni  = distinct(hifen_absent_powo_and_ipni, taxon_name,
.keep_all = TRUE)
View(hifen_absent_powo_and_ipni)
setdiff(hifen_absent_powo_and_ipni$taxon_name, hifen_absent_FFB_distinct$name)
?setdiff
setdiff(1:5, 4:8)
##mergin genus and species for taxon name due to some hifens between both in the ipni and powo
for(1 in seq_along(fam_names)){
##mergin genus and species for taxon name due to some hifens between both in the ipni and powo
for(i in 1){
##filtering the FFB by family name
FFB_df = angiosperms_bra %>% filter(Família == fam_names[i])
##only species with hifen
FFB_hifen = FFB_df$taxon_name[which(str_detect(FFB_df$taxon_name,
"-"))]
##filtering
FFB_hifen_df = FFB_df %>% filter(taxon_name %in% FFB_hifen)
tryCatch({
##powo dataframe filtered by family
df_powo = tidy(search_powo(list(family = fam_names[i],
distribution = "Brazil"),
limit = 1000,
filters = c("species", "accepted")))
##species with hifen
powo_hifen = df_powo$name[which(str_detect(df_powo$name,
"-"))]
#filtering
powo_hifen_df = df_powo %>% filter(name %in% powo_hifen)
########IPNI dataframe filtered by family
df_IPNI = tidy(search_ipni(list(family = fam_names[i],
distribution = "Brazil"),
limit = 1000,
filters = c("species")))
##which species have hifen
IPNI_hifen = df_IPNI$name[which(str_detect(df_IPNI$name,
"-"))]
#filtering
IPNI_hifen_df = df_IPNI %>% filter(name %in% IPNI_hifen)
}, error = function(e){
message("Absent family in IPNI or POWO")
print(e)
})
############Obtaining dataframes############
##which is in the powo df but it is not in the FFB df
list_powo_hifen_absent_in_FFB[[i]] <- powo_hifen_df[which(powo_hifen_df$name %in%
setdiff(powo_hifen_df$name,FFB_hifen_df$taxon_name)),]
##which is in the FFB but it is not in the powo df
list_FFB_hifen_absent_in_powo[[i]] <- FFB_hifen_df[which(FFB_hifen_df$taxon_name %in%
setdiff(FFB_hifen_df$taxon_name,powo_hifen_df$name)),]
##which is in the IPNI df but it is not in the FFB df
list_IPNI_hifen_absent_in_FFB[[i]] <- IPNI_hifen_df[which(IPNI_hifen_df$name %in%
setdiff(IPNI_hifen_df$name,FFB_hifen_df$taxon_name)),]
###Which in the FFB but it is not in the IPNI DF
list_FFB_hifen_absent_in_IPNI[[i]] <- FFB_hifen_df[which(FFB_hifen_df$taxon_name %in%
setdiff(FFB_hifen_df$taxon_name,IPNI_hifen_df$name)),]
}
View(list_powo_hifen_absent_in_FFB)
list_powo_hifen_absent_in_FFB[["Acanthaceae"]]
list_IPNI_hifen_absent_in_FFB[["Acanthaceae"]]
hifen_absent_FFB_distinct %>% filter(family == "Acanthaceae")
hifen_absent_FFB_distinct[which(hifen_absent_FFB_distinct$name %in% setdiff(hifen_absent_FFB_distinct$name, hifen_absent_powo_and_ipni))]
hifen_absent_FFB_distinct[which(hifen_absent_FFB_distinct$name %in% setdiff(hifen_absent_FFB_distinct$name, hifen_absent_powo_and_ipni)),]
y =hifen_absent_FFB_distinct[which(hifen_absent_FFB_distinct$name %in% setdiff(hifen_absent_FFB_distinct$name, hifen_absent_powo_and_ipni)),]
dim(y)
y =hifen_absent_FFB_distinct[which(hifen_absent_FFB_distinct$name %in% setdiff(hifen_absent_FFB_distinct$name, hifen_absent_powo_and_ipni$taxon_name)),]
View(y)
y =hifen_absent_FFB_distinct[-which(hifen_absent_FFB_distinct$name %in% setdiff(hifen_absent_FFB_distinct$name, hifen_absent_powo_and_ipni$taxon_name)),]
hifen_absent_FFB_distinct[which(y$name),]
hifen_absent_FFB_distinct[y$name,]
###FFB the original dataset
angiosperms_bra =   angiosperms_bra %>%
unite("taxon_name", Gênero:Espécie, sep = " ",
remove = FALSE)
##family names
fam_names <- unique(angiosperms_bra$Família)
list_powo_hifen_absent_in_FFB <- vector("list", length = length(fam_names))
list_IPNI_hifen_absent_in_FFB <- vector("list", length = length(fam_names))
list_FFB_hifen_absent_in_powo <- vector("list", length = length(fam_names))
list_FFB_hifen_absent_in_IPNI <- vector("list", length = length(fam_names))
##naming
names(list_powo_hifen_absent_in_FFB) <- fam_names
names(list_IPNI_hifen_absent_in_FFB) <- fam_names
names(list_FFB_hifen_absent_in_powo) <- fam_names
names(list_FFB_hifen_absent_in_IPNI) <- fam_names
##only species with hifen
FFB_hifen = angiosperms_bra$taxon_name[which(str_detect(angiosperms_bra$taxon_name,
"-"))]
FFB_hifen
duplicated(FFB_hifen)
which(duplicated(FFB_hifen))
FFB_hifen[283]
FFB_hifen[which(FFB_hifen==FFB_hifen[283])]
which(FFB_hifen==FFB_hifen[283])
##filtering
FFB_hifen_df = FFB_df %>% filter(taxon_name %in% FFB_hifen)
##mergin genus and species for taxon name due to some hifens between both in the ipni and powo
for(i in seq_along(fam_names)){
##only species with hifen
FFB_hifen = angiosperms_bra$taxon_name[which(str_detect(angiosperms_bra$taxon_name,
"-"))]
##filtering
FFB_hifen_df = FFB_df %>% filter(taxon_name %in% FFB_hifen)
tryCatch({
##powo dataframe filtered by family
df_powo = tidy(search_powo(list(family = fam_names[i],
distribution = "Brazil"),
limit = 1000,
filters = c("species", "accepted")))
##species with hifen
powo_hifen = df_powo$name[which(str_detect(df_powo$name,
"-"))]
#filtering
powo_hifen_df = df_powo %>% filter(name %in% powo_hifen)
########IPNI dataframe filtered by family
df_IPNI = tidy(search_ipni(list(family = fam_names[i],
distribution = "Brazil"),
limit = 1000,
filters = c("species")))
##which species have hifen
IPNI_hifen = df_IPNI$name[which(str_detect(df_IPNI$name,
"-"))]
#filtering
IPNI_hifen_df = df_IPNI %>% filter(name %in% IPNI_hifen)
}, error = function(e){
message("Absent family in IPNI or POWO")
print(e)
})
############Obtaining dataframes############
##which is in the powo df but it is not in the FFB df
list_powo_hifen_absent_in_FFB[[i]] <- powo_hifen_df[which(powo_hifen_df$name %in%
setdiff(powo_hifen_df$name,FFB_hifen_df$taxon_name)),]
##which is in the FFB but it is not in the powo df
list_FFB_hifen_absent_in_powo[[i]] <- FFB_hifen_df[which(FFB_hifen_df$taxon_name %in%
setdiff(FFB_hifen_df$taxon_name,powo_hifen_df$name)),]
##which is in the IPNI df but it is not in the FFB df
list_IPNI_hifen_absent_in_FFB[[i]] <- IPNI_hifen_df[which(IPNI_hifen_df$name %in%
setdiff(IPNI_hifen_df$name,FFB_hifen_df$taxon_name)),]
###Which in the FFB but it is not in the IPNI DF
list_FFB_hifen_absent_in_IPNI[[i]] <- FFB_hifen_df[which(FFB_hifen_df$taxon_name %in%
setdiff(FFB_hifen_df$taxon_name,IPNI_hifen_df$name)),]
}
##eliminating empty elements
list_powo_hifen_absent_in_FFB = list_drop_empty(list_powo_hifen_absent_in_FFB)
list_FFB_hifen_absent_in_powo = list_drop_empty(list_FFB_hifen_absent_in_powo)
list_IPNI_hifen_absent_in_FFB = list_drop_empty(list_IPNI_hifen_absent_in_FFB)
list_FFB_hifen_absent_in_IPNI = list_drop_empty(list_FFB_hifen_absent_in_IPNI)
##transforming in a dataset
POWO_hifen_absent_FFB = do.call("rbind", list_powo_hifen_absent_in_FFB)
FFB_hifen_absent_POWO = do.call("rbind", list_FFB_hifen_absent_in_powo)
IPNI_hifen_absent_FFB = do.call("rbind.fill", list_IPNI_hifen_absent_in_FFB)
FFB_hifen_absent_IPNI = do.call("rbind", list_FFB_hifen_absent_in_IPNI)
View(FFB_hifen_absent_POWO)
##eliminating rownames
rownames(POWO_hifen_absent_FFB) = NULL
rownames(FFB_hifen_absent_POWO) = NULL
rownames(IPNI_hifen_absent_FFB) = NULL
rownames(FFB_hifen_absent_IPNI) = NULL
##source
POWO_hifen_absent_FFB$source = "POWO"
IPNI_hifen_absent_FFB$source = "IPNI"
##merging POWO and IPNI dataframes
hifen_absent_FFB = rbind.fill(POWO_hifen_absent_FFB, IPNI_hifen_absent_FFB)
##removing duplicated lines
hifen_absent_FFB_distinct = distinct(hifen_absent_FFB, name,
.keep_all = TRUE)
View(hifen_absent_FFB_distinct)
###merging FFB datasets
FFB_hifen_absent_POWO$absent = "POWO"
FFB_hifen_absent_IPNI$absent = "IPNI"
hifen_absent_powo_and_ipni = rbind.fill(FFB_hifen_absent_POWO,
FFB_hifen_absent_IPNI)
##removing duplicated lines
hifen_absent_powo_and_ipni  = distinct(hifen_absent_powo_and_ipni, taxon_name,
.keep_all = TRUE)
View(hifen_absent_powo_and_ipni)
hifen_absent_powo_and_ipni = rbind.fill(FFB_hifen_absent_POWO,
FFB_hifen_absent_IPNI)
View(hifen_absent_powo_and_ipni)
##removing duplicated lines
hifen_absent_powo_and_ipni  = distinct(hifen_absent_powo_and_ipni, taxon_name,
.keep_all = TRUE)
hifen_absent_powo_and_ipni = rbind.fill(FFB_hifen_absent_POWO,
FFB_hifen_absent_IPNI)
##removing duplicated lines
hifen_absent_powo_and_ipni  = distinct(hifen_absent_powo_and_ipni, taxon_name,
.keep_all = TRUE)
View(hifen_absent_powo_and_ipni)
View(hifen_absent_FFB_distinct)
c(1,1,2,2,3,4,5)
distinct(c(1,1,2,2,3,4,5))
df = data.frame(x = c(1,1,2,2,3,4,5), y = "powo")
df
distinct(df, x)
hifen_absent_powo_and_ipni = rbind.fill(FFB_hifen_absent_POWO,
FFB_hifen_absent_IPNI)
hifen_absent_powo_and_ipni$taxon_name
duplicated(hifen_absent_powo_and_ipni$taxon_name)
##removing duplicated lines
hifen_absent_powo_and_ipni  = distinct(hifen_absent_powo_and_ipni, taxon_name,
.keep_all = TRUE)
hifen_absent_powo_and_ipni = rbind.fill(FFB_hifen_absent_POWO,
FFB_hifen_absent_IPNI)
.keep_all = TRUE)
hifen_absent_powo_and_ipni = rbind.fill(FFB_hifen_absent_POWO,
FFB_hifen_absent_IPNI)
duplicated(hifen_absent_powo_and_ipni)
##removing duplicated lines
hifen_absent_powo_and_ipni  = distinct(hifen_absent_powo_and_ipni, taxon_name)
View(hifen_absent_powo_and_ipni)
##merging POWO and IPNI dataframes
hifen_absent_FFB = rbind.fill(POWO_hifen_absent_FFB, IPNI_hifen_absent_FFB)
dim(hifen_absent_FFB)
hifen_absent_powo_and_ipni = rbind.fill(FFB_hifen_absent_POWO,
FFB_hifen_absent_IPNI)
View(hifen_absent_powo_and_ipni)
setdiff(hifen_absent_FFB$name, hifen_absent_powo_and_ipni$taxon_name)
setdiff(hifen_absent_powo_and_ipni$taxon_name, hifen_absent_FFB$name)
list_FFB_hifen_absent_in_powo = list_drop_empty(list_FFB_hifen_absent_in_powo)
list_FFB_hifen_absent_in_IPNI = list_drop_empty(list_FFB_hifen_absent_in_IPNI)
FFB_hifen_absent_POWO = do.call("rbind", list_FFB_hifen_absent_in_powo)
FFB_hifen_absent_IPNI = do.call("rbind", list_FFB_hifen_absent_in_IPNI)
rownames(FFB_hifen_absent_POWO) = NULL
rownames(FFB_hifen_absent_IPNI) = NULL
###merging FFB datasets
FFB_hifen_absent_POWO$absent = "POWO"
FFB_hifen_absent_IPNI$absent = "IPNI"
hifen_absent_powo_and_ipni = rbind.fill(FFB_hifen_absent_POWO,
FFB_hifen_absent_IPNI)
dim(hifen_absent_powo_and_ipni)
dim(duplicated(hifen_absent_powo_and_ipni, taxon_name))
dim(distinct(hifen_absent_powo_and_ipni, taxon_name))
View(hifen_absent_powo_and_ipni)
###FFB the original dataset
angiosperms_bra =   angiosperms_bra %>%
unite("taxon_name", Gênero:Espécie, sep = " ",
remove = FALSE)
##family names
fam_names <- unique(angiosperms_bra$Família)
list_powo_hifen_absent_in_FFB <- vector("list", length = length(fam_names))
list_IPNI_hifen_absent_in_FFB <- vector("list", length = length(fam_names))
list_FFB_hifen_absent_in_powo <- vector("list", length = length(fam_names))
list_FFB_hifen_absent_in_IPNI <- vector("list", length = length(fam_names))
##naming
names(list_powo_hifen_absent_in_FFB) <- fam_names
names(list_IPNI_hifen_absent_in_FFB) <- fam_names
names(list_FFB_hifen_absent_in_powo) <- fam_names
names(list_FFB_hifen_absent_in_IPNI) <- fam_names
##only species with hifen
FFB_hifen = angiosperms_bra$taxon_name[which(str_detect(angiosperms_bra$taxon_name,
"-"))]
##filtering
FFB_hifen_df = FFB_df %>% filter(taxon_name %in% FFB_hifen)
FFB_hifen
View(FFF_hifen_df)
##filtering
FFB_hifen_df = angiosperms_bra %>% filter(taxon_name %in% FFB_hifen)
View(FFB_hifen_df)
rm(FFF_hifen_df)
##family names
fam_names <- unique(angiosperms_bra$Família)
######creating list for keeping the species with hifen present in powo
#but absent in FFB
list_powo_hifen_absent_in_FFB <- vector("list", length = length(fam_names))
######creating list for keeping the species with hifen present in IPNI
#but absent in FFB
list_IPNI_hifen_absent_in_FFB <- vector("list", length = length(fam_names))
######creating list for keeping the species with hifen present in FFB
#but absent in POWO
list_FFB_hifen_absent_in_powo <- vector("list", length = length(fam_names))
######creating list for keeping the species with hifen present in FFB
#but absent in IPNI
list_FFB_hifen_absent_in_IPNI <- vector("list", length = length(fam_names))
##Naming lists
##naming
names(list_powo_hifen_absent_in_FFB) <- fam_names
names(list_IPNI_hifen_absent_in_FFB) <- fam_names
names(list_FFB_hifen_absent_in_powo) <- fam_names
names(list_FFB_hifen_absent_in_IPNI) <- fam_names
##mergin genus and species for taxon name due to some hifens between both in the ipni and powo
for(i in seq_along(fam_names)){
tryCatch({
##powo dataframe filtered by family
df_powo = tidy(search_powo(list(family = fam_names[i],
distribution = "Brazil"),
limit = 1000,
filters = c("species", "accepted")))
##species with hifen
powo_hifen = df_powo$name[which(str_detect(df_powo$name,
"-"))]
#filtering
powo_hifen_df = df_powo %>% filter(name %in% powo_hifen)
########IPNI dataframe filtered by family
df_IPNI = tidy(search_ipni(list(family = fam_names[i],
distribution = "Brazil"),
limit = 1000,
filters = c("species")))
##which species have hifen
IPNI_hifen = df_IPNI$name[which(str_detect(df_IPNI$name,
"-"))]
#filtering
IPNI_hifen_df = df_IPNI %>% filter(name %in% IPNI_hifen)
}, error = function(e){
message("Absent family in IPNI or POWO")
print(e)
})
############Obtaining dataframes############
##which is in the powo df but it is not in the FFB df
list_powo_hifen_absent_in_FFB[[i]] <- powo_hifen_df[which(powo_hifen_df$name %in%
setdiff(powo_hifen_df$name,FFB_hifen_df$taxon_name)),]
##which is in the FFB but it is not in the powo df
list_FFB_hifen_absent_in_powo[[i]] <- FFB_hifen_df[which(FFB_hifen_df$taxon_name %in%
setdiff(FFB_hifen_df$taxon_name,powo_hifen_df$name)),]
##which is in the IPNI df but it is not in the FFB df
list_IPNI_hifen_absent_in_FFB[[i]] <- IPNI_hifen_df[which(IPNI_hifen_df$name %in%
setdiff(IPNI_hifen_df$name,FFB_hifen_df$taxon_name)),]
###Which in the FFB but it is not in the IPNI DF
list_FFB_hifen_absent_in_IPNI[[i]] <- FFB_hifen_df[which(FFB_hifen_df$taxon_name %in%
setdiff(FFB_hifen_df$taxon_name,IPNI_hifen_df$name)),]
}
##eliminating empty elements
list_powo_hifen_absent_in_FFB = list_drop_empty(list_powo_hifen_absent_in_FFB)
list_FFB_hifen_absent_in_powo = list_drop_empty(list_FFB_hifen_absent_in_powo)
list_IPNI_hifen_absent_in_FFB = list_drop_empty(list_IPNI_hifen_absent_in_FFB)
list_FFB_hifen_absent_in_IPNI = list_drop_empty(list_FFB_hifen_absent_in_IPNI)
##transforming in a dataset
POWO_hifen_absent_FFB = do.call("rbind", list_powo_hifen_absent_in_FFB)
FFB_hifen_absent_POWO = do.call("rbind", list_FFB_hifen_absent_in_powo)
IPNI_hifen_absent_FFB = do.call("rbind.fill", list_IPNI_hifen_absent_in_FFB)
FFB_hifen_absent_IPNI = do.call("rbind", list_FFB_hifen_absent_in_IPNI)
##eliminating rownames
rownames(POWO_hifen_absent_FFB) = NULL
rownames(FFB_hifen_absent_POWO) = NULL
rownames(IPNI_hifen_absent_FFB) = NULL
rownames(FFB_hifen_absent_IPNI) = NULL
##source
POWO_hifen_absent_FFB$source = "POWO"
IPNI_hifen_absent_FFB$source = "IPNI"
##merging POWO and IPNI dataframes
hifen_absent_FFB = rbind.fill(POWO_hifen_absent_FFB, IPNI_hifen_absent_FFB)
View(hifen_absent_FFB)
###merging FFB datasets
FFB_hifen_absent_POWO$absent = "POWO"
FFB_hifen_absent_IPNI$absent = "IPNI"
hifen_absent_powo_and_ipni = rbind.fill(FFB_hifen_absent_POWO,
FFB_hifen_absent_IPNI)
##removing duplicated lines
hifen_absent_powo_and_ipni  = distinct(hifen_absent_powo_and_ipni, taxon_name)
View(hifen_absent_FFB_distinct)
##removing duplicated lines
hifen_absent_FFB_distinct = distinct(hifen_absent_FFB, name,
.keep_all = TRUE)
setdiff(hifen_absent_FFB_distinct$name, hifen_absent_powo_and_ipni$taxon_name)
View(hifen_absent_FFB_distinct)
hifen_absent_powo_and_ipni = rbind.fill(FFB_hifen_absent_POWO,
FFB_hifen_absent_IPNI)
##removing duplicated lines
hifen_absent_powo_and_ipni  = distinct(hifen_absent_powo_and_ipni, taxon_name,
.keep_all = TRUE)
View(hifen_absent_powo_and_ipni)
setdiff(hifen_absent_FFB_distinct$name, angiosperms_bra$taxon_name)
hifen_absent_FFB_distinct
View(hifen_absent_FFB_distinct)
getwd()
##saving
write_csv(hifen_absent_FFB_distinct,
file = "Data/Processed/Angiosperms/hifen_absent_in_FFB.csv")
##saving
write_csv(hifen_absent_powo_and_ipni,
file = "Data/Processed/Angiosperms/hifen_absent_in_Powo_and_IPNI.csv")
View(hifen_absent_powo_and_ipni)
hifen_absent_powo_and_ipni = rbind.fill(FFB_hifen_absent_POWO,
FFB_hifen_absent_IPNI)
##removing duplicated lines
hifen_absent_powo_and_ipni  = distinct(hifen_absent_powo_and_ipni, taxon_name,
.keep_all = TRUE)
View(hifen_absent_powo_and_ipni)
