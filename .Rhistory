if(dim(ipni_abs)[1] == 0){
print("No absent species in Flora de Brasil")
} else{
##inserting a df inside each list with the missing species in the Flora Brazil
list_fam_ang[[i]] = ipni_abs
}
}
View(list_fam_ang)
######creating list for keeping the missing species within the families
list_fam_ang_powo <- vector("list", length = length(fam_names))
##naming
names(list_fam_ang_powo) <- fam_names
View(list_fam_ang_powo)
##loop for finding missing species in the Flora de Brasil
for(i in seq_along(fam_names)){
##subseting the angiosperm df
angio_fam = angiosperms_bra %>% filter(Família == fam_names[i])
###tryCatch for handling the missing families in POWO
tryCatch({
##calling the species within families in POWO
powo_df = tidy(search_powo(list(family = fam_names[i],
distribution = "Brazil"),
limit = 1000))
##filtering for only considering species
powo_df = powo_df %>% filter(rank == "Species")
return(powo_df)
}, error = function(e){
message("Absent family in POWO")
print(e)
})
#arranging taxa names
powo_df$name = str_replace(powo_df$name, " ", "_")
##POWO species absent in Flora de Brasil
powo_abs = powo_df[-which(powo_df$name %in% angio_fam$taxon_name), ]
##if else statement for not saving empty dfs
if(dim(powo_abs)[1] == 0){
print("No absent species in Flora de Brasil")
} else{
powo_abs[,c('genus', 'species')] = str_split_fixed(powo_abs$name, '_', 2)
powo_abs = powo_abs %>% relocate(family, genus, species, author)
##inserting a df inside each list with the missing species in the
list_fam_ang_powo[[i]] = powo_abs
write_xlsx(powo_abs, path = paste0("Data/Metadata/Angiosperms/powo/",
fam_names[i],
".xlsx"))
}
}
###removing null elements
list_fam_powo = list_fam_ang_powo[-which(sapply(list_fam_ang_powo, is.null))]
##saving list
save(list_fam_powo, file = "Data/Metadata/Angiosperms/powo/powo_fam_abs.RData")
View(list_fam_powo)
##collapsing the list in a df
df_powo_families <- do.call("rbind", list_fam_powo)
rownames(df_powo_families) <- NULL
##writing
write_csv(df_powo_families,
file = "Data/Metadata/Angiosperms/powo/powo_fam_abs.csv")
######creating list for keeping the missing species within the families
list_fam_ang_wcvp <- vector("list", length = length(fam_names))
##calling the species within families in wcvp
wcvp_df = tidy(search_wcvp(list(family = fam_names[1],
distribution = "Brazil"),
limit = 1000))
##calling the species within families in wcvp
wcvp_df = tidy(search_wcvp(list(family = fam_names[1]),
limit = 1000))
fam_names
library(kewr)
library(dplyr)
library(readr)
library(readxl)
library(plyr)
library(kewr)
devtools::install_github("barnabywalker/kewr")
library(kewr)
library(dplyr)
library(readr)
library(readxl)
library(plyr)
fam1 <- read_excel(path = "Data/Raw/exsicatas_HV/Acanthaceae_HV.xlsx")
View(fam1)
warnings()
colnames(fam1)
fam1 <- fam1 %>% filter(`Rank:` == "Espécie")
View(fam1)
View(df_ipni_families)
mis_fam_1 <- df_ipni_families %>% filter(family == "Acanthaceae")
View(mis_fam_1)
fam1$Gênero %in% mis_fam_1$genus
fam_ex = fam1[,fam1$Gênero %in% mis_fam_1$genus]
fam_ex = fam1[fam1$Gênero %in% mis_fam_1$genus, ]
View(fam_ex)
fam_ex = fam_ex[fam_ex$Espécie %in% mis_fam_1$species,]
View(fam_ex)
unique(fam_ex$Espécie)
length(unique(fam_ex$Espécie))
View(df_ipni_families)
#########assigning source
df_ipni_families$source <- "IPNI"
df_powo_families$source <- "POWO"
View(df_powo_families)
View(df_ipni_families)
library(stringr)
df_ipni_families$name <- str_c(df_ipni_families$genus,
df_ipni_families$species, sep = "_")
View(df_ipni_families)
##writing
write_csv(df_ipni_families,
file = "Data/Metadata/Angiosperms/ipni/ipni_fam_abs.csv")
#########defining which species are in POWO but absent in IPNI
x.powo <- df_powo_families[-which(df_powo_families$name %in% df_ipni_families$name),]
View(x.powo)
x.ipni <- df_ipni_families[-which(df_ipni_families$name %in% df_powo_families$name),]
View(x.powo)
View(x.ipni)
df_ipni_powo_absent <- rbind.fill(df_ipni_families, x.powo)
View(df_ipni_powo_absent)
length(unique(df_ipni_powo_absent))
length(unique(df_ipni_powo_absent$name))
duplicated(df_ipni_powo_absent)
duplicated(df_ipni_powo_absent$name)
df_ipni_powo_absent$name[which(duplicated(df_ipni_powo_absent$name))]
duplicated(df_ipni_families$name)
df_ipni_families$name[which(duplicated(df_ipni_families$name))]
duplicated(angiosperms_bra$Espécie)
duplicated(angiosperms_bra$taxon_name)
df_ipni_families_1 <- df_ipni_families[-which(duplicated(df_ipni_families$name)),]
View(df_ipni_families_1)
##eliminating duplicated species
df_ipni_families <- df_ipni_families[-which(duplicated(df_ipni_families$name)),]
##writing
write_csv(df_ipni_families,
file = "Data/Metadata/Angiosperms/ipni/ipni_fam_abs.csv")
#########assigning source
df_ipni_families$source <- "IPNI"
df_powo_families$source <- "POWO"
#########defining which species are in POWO but absent in IPNI
x.powo <- df_powo_families[-which(df_powo_families$name %in% df_ipni_families$name),]
df_ipni_powo_absent <- rbind.fill(df_ipni_families, x.powo)
View(df_ipni_powo_absent)
22-17
install.packages("writexl")
library(writexl)
###
write_xlsx(df_ipni_powo_absent,
file = "Data/Metadata/Angiosperms/df_absent_sp_flora.xlsx")
?write_xlsx
###
write_xlsx(df_ipni_powo_absent,
path = "Data/Metadata/Angiosperms/df_absent_sp_flora.xlsx")
###
write_xlsx(df_ipni_powo_absent,
path = "Data/Processed/Angiosperms/df_absent_sp_flora.xlsx")
install.packages("rvest")
library(rvest)
url <- "http://reflora.jbrj.gov.br/reflora/herbarioVirtual/ConsultaTestemunhoHVUC/ConsultaTestemunhoHVUC.do"
x <- read_html(url)
x
fam_names
install.packages("RSelenium")
library(RSelenium)
##start a selenium server
driver <- rsDriver(browser = "chrome", chromever = "latest")
fam_names
?rsDriver
binman::list_versions("chromedriver")
##start a selenium server
driver <- rsDriver(browser = "chrome",
chromever = NULL,
verbose = FALSE)
binman::list_versions("iedriverserver")
binman::list_versions("chromedriver")
binman::list_versions("iedriverserver")
binman::list_versions("phantomjs")
binman::list_versions("geckodriver")
install.packages("ggplot2")
library(ggplot2)
View(df_ipni_powo_absent)
View(df_ipni_powo_absent)
df_ipni_powo_absent %>% group_by(family) %>% count(species)
library(dplyr)
df_ipni_powo_absent %>% group_by(family) %>% count(species)
df_ipni_powo_absent %>% group_by(family) %>% count()
df_ipni_powo_absent %>% group_by(family) %>% count() %>% filter(n >= 50)
x <- df_ipni_powo_absent %>% group_by(family) %>% count() %>% filter(n >= 50)
View(x)
x <- df_ipni_powo_absent %>% group_by(family) %>% count() %>% filter(n >= 70)
View(x)
x <- df_ipni_powo_absent %>% group_by(family, genus) %>% count() %>% filter(n >= 70)
View(x)
x <- df_ipni_powo_absent %>% group_by(family, genus) %>% count()
View(x)
x <- df_ipni_powo_absent %>% group_by(family, genus) %>% count(n > 20)
x <- df_ipni_powo_absent %>% group_by(family, genus) %>% count(n >= 20)
x <- df_ipni_powo_absent %>% group_by(family, genus) %>% count() %>%
filter(n >= 20)
View(x)
View(x)
unique(x$family)
x <- df_ipni_powo_absent %>% group_by(family, genus) %>% count() %>%
filter(n >= 25)
View(x)
x <- df_ipni_powo_absent %>% group_by(family, genus) %>% count() %>%
filter(n >= 20)
p <- ggplot(x, aes(x=as.factor(genus), y=n)) +
geom_bar(stat="identity", fill=alpha("blue", 0.3)) +
# Limits of the plot = very important. The negative value controls the size of the inner circle, the positive one is useful to add size over each bar
ylim(-100,120) +
# Custom the theme: no axis title and no cartesian grid
theme_minimal()
p
p <- ggplot(x, aes(x=as.factor(genus), y=n)) +
geom_bar(stat="identity", fill=alpha("blue", 0.3)) +
# Limits of the plot = very important. The negative value controls the size of the inner circle, the positive one is useful to add size over each bar
ylim(-100,120) +
# Custom the theme: no axis title and no cartesian grid
theme_minimal()+
coord_polar(start = 0)
p
p
p
View(x)
x <- df_ipni_powo_absent %>% group_by(family) %>% count(genus) %>%
filter(n >= 20)
View(x)
x <- df_ipni_powo_absent %>% group_by(family) %>% count(genus)
View(x)
x <- df_ipni_powo_absent %>% group_by(family, genus) %>% count() %>%
filter(n >= 20)
x <- df_ipni_powo_absent %>% group_by(family, genus) %>% count() %>%
filter(n >= 25)
View(x)
x <- df_ipni_powo_absent %>% group_by(family) %>% count(genus)
View(x)
View(df_ipni_powo_absent)
x <- df_ipni_powo_absent %>% group_by(family) %>% count()
View(x)
df_ipni_powo_absent %>% filter(family == "Acanthaceae")
y <- df_ipni_powo_absent %>% filter(family == "Acanthaceae")
View(y)
x <- df_ipni_powo_absent %>% group_by(family) %>% n_distinct(genus)
x <- df_ipni_powo_absent %>% group_by(family) %>% n_distinct(genus)
x <- df_ipni_powo_absent %>% group_by(family) %>% summarise(unique_genus = n_distinct(genus)) %>% ungroup()
View(x)
length(unique(y$genus))
x <- df_ipni_powo_absent %>% group_by(family) %>% summarise(unique_genus = n_distinct(genus),
unique_sp = n_distinct(species)) %>% ungroup()
View(x)
length(unique(y$species))
View(y)
which(distinct(y$species))
which(duplicated(y$species))
x <- df_ipni_powo_absent %>% group_by(family) %>% summarise(unique_genus = n_distinct(genus),
unique_sp = n_distinct(names)) %>% ungroup()
x <- df_ipni_powo_absent %>% group_by(family) %>% summarise(unique_genus = n_distinct(genus),
unique_sp = count(names)) %>% ungroup()
x <- df_ipni_powo_absent %>% group_by(family) %>% summarise(unique_genus = n_distinct(genus),
unique_sp = count(name)) %>% ungroup()
x <- df_ipni_powo_absent %>% group_by(family) %>% summarise(unique_genus = n_distinct(genus),
unique_sp = n(name)) %>% ungroup()
x <- df_ipni_powo_absent %>% group_by(family) %>% summarise(unique_genus = n_distinct(genus),
unique_sp = n_distinct(name)) %>% ungroup()
View(x)
View(x)
p1 <- x %>% filter(unique_genus >= 20) %>%
ggplot(x = family, y = unique_genus)+
geom_bar()
p1
p1 <- x %>% filter(unique_genus >= 20) %>%
ggplot(x = family, y = unique_genus)+
geom_bar(stat = "identity")
p1
p1 <- x %>% filter(unique_genus >= 20) %>%
ggplot(aes(x = family, y = unique_genus))+
geom_bar(stat = "identity")
p1
View(x)
x <- df_ipni_powo_absent %>% group_by(family) %>%
summarise(unique_genus = n_distinct(genus),
unique_sp = n_distinct(name)) %>%
ungroup() %>%
pivot_longer(starts_with("unique"), names_to = taxon, values_to = number)
library(tidyr)
x <- df_ipni_powo_absent %>% group_by(family) %>%
summarise(unique_genus = n_distinct(genus),
unique_sp = n_distinct(name)) %>%
ungroup() %>%
pivot_longer(starts_with("unique"), names_to = taxon, values_to = number)
x <- df_ipni_powo_absent %>% group_by(family) %>%
summarise(unique_genus = n_distinct(genus),
unique_sp = n_distinct(name)) %>%
ungroup() %>%
pivot_longer(starts_with("unique"), names_to = "taxon", values_to = "number")
View(POWOcodes)
p1 <- x %>% filter(unique_genus >= 20) %>%
ggplot(aes(x = family, y = number, fill = taxon))+
geom_bar(stat = "identity")
p1 <- x %>%
ggplot(aes(x = family, y = number, fill = taxon))+
geom_bar(stat = "identity")
p1
p1 <- x %>%
ggplot(aes(x = family, y = number, fill = taxon))+
geom_bar(stat = "identity", position = "dodge")
p1
mis_general <- df_ipni_powo_absent %>% group_by(family) %>%
summarise(unique_genus = n_distinct(genus),
unique_sp = n_distinct(name)) %>%
ungroup() %>%
pivot_longer(starts_with("unique"), names_to = "taxon", values_to = "number")
mis_plus20 <- df_ipni_powo_absent %>% group_by(family) %>%
summarise(unique_genus = n_distinct(genus),
unique_sp = n_distinct(name)) %>%
ungroup() %>% filter(unique_genus >= 20) %>%
pivot_longer(starts_with("unique"), names_to = "taxon", values_to = "number")
p2 <- mis_plus20 %>%
ggplot(aes(x = family, y = number, fill = taxon))+
geom_bar(stat = "identity", position = "dodge")
p2
p2 <- mis_plus20 %>%
ggplot(aes(x = family, y = number, fill = taxon))+
geom_bar(stat = "identity", position = "dodge") +
coord_flip()
p2
p2 <- mis_plus20 %>%
ggplot(aes(x = family, y = number, fill = taxon))+
geom_bar(stat = "identity", position = "dodge") +
coord_flip()+
theme_classic()
p2
p2 <- mis_plus20 %>%
ggplot(aes(x = family, y = number, fill = taxon))+
geom_bar(stat = "identity", position = "dodge") +
scale_fill_manual(values = c("#d8b365", "#5ab4ac"),
name = "Missing taxa",
breaks = c("unique_genus", "unique_sp"),
labels = c("genera", "species"))+
coord_flip()+
theme_classic()
p2
p2 <- mis_plus20 %>%
ggplot(aes(x = family, y = number, fill = taxon))+
geom_bar(stat = "identity", position = "dodge") +
scale_fill_manual(values = c("#d8b365", "#5ab4ac"),
name = "Missing taxa",
breaks = c("unique_genus", "unique_sp"),
labels = c("genera", "species"))+
coord_flip()+
theme_bw()
p2 <- mis_plus20 %>%
ggplot(aes(x = family, y = number, fill = taxon))+
geom_bar(stat = "identity", position = "dodge") +
scale_fill_manual(values = c("#d8b365", "#5ab4ac"),
name = "Missing taxa",
breaks = c("unique_genus", "unique_sp"),
labels = c("genera", "species"))+
coord_flip()+
theme_classic()
p2
p2 <- mis_plus20 %>%
ggplot(aes(x = family, y = number, fill = taxon))+
geom_bar(stat = "identity", position = "dodge") +
scale_fill_manual(values = c("#d8b365", "#5ab4ac"),
name = "Missing taxa",
breaks = c("unique_genus", "unique_sp"),
labels = c("genera", "species"))+
coord_flip()+
theme_bw()
p2
theme_bw()
p2 <- mis_plus20 %>%
ggplot(aes(x = family, y = number, fill = taxon))+
geom_bar(stat = "identity", position = "dodge") +
scale_fill_manual(values = c("#d8b365", "#5ab4ac"),
name = "Taxa",
breaks = c("unique_genus", "unique_sp"),
labels = c("genera", "species"))+
coord_flip()+
xlab("Missing taxa")+
ylab("Family")+
theme_bw()
p2
p2 <- mis_plus20 %>%
ggplot(aes(x = family, y = number, fill = taxon))+
geom_bar(stat = "identity", position = "dodge") +
scale_fill_manual(values = c("#d8b365", "#5ab4ac"),
name = "Taxa",
breaks = c("unique_genus", "unique_sp"),
labels = c("Genus", "Species"))+
coord_flip()+
xlab("Missing taxa")+
ylab("Family")+
theme_bw()
p2 <- mis_plus20 %>%
ggplot(aes(x = family, y = number, fill = taxon))+
geom_bar(stat = "identity", position = "dodge") +
scale_fill_manual(values = c("#d8b365", "#5ab4ac"),
name = "Taxa",
breaks = c("unique_genus", "unique_sp"),
labels = c("Genus", "Species"))+
coord_flip()+
xlab("Missing taxa")+
ylab("Family")+
theme_bw()+
theme(legend.position = "bottom",
legend.title = element_text(family = "serif", size = (11),
face = "bold"),
legend.text = element_text(family = "serif", size = (10)),
axis.title = element_text(family = "serif", size = (11),
face = "bold"),
axis.text = element_text(family = "serif", size = (11)))
p2
p2 <- mis_plus20 %>%
ggplot(aes(x = family, y = number, fill = taxon))+
geom_bar(stat = "identity", position = "dodge") +
scale_fill_manual(values = c("#d8b365", "#5ab4ac"),
name = "Taxa",
breaks = c("unique_genus", "unique_sp"),
labels = c("Genus", "Species"))+
coord_flip()+
xlab("Family")+
ylab("Missing number")+
theme_bw()+
theme(legend.position = "bottom",
legend.title = element_text(family = "serif", size = (11),
face = "bold"),
legend.text = element_text(family = "serif", size = (10)),
axis.title = element_text(family = "serif", size = (11),
face = "bold"),
axis.text = element_text(family = "serif", size = (11)))
p2
theme_bw()+
theme(legend.position = "bottom",
legend.title = element_text(family = "serif", size = (11),
face = "bold"),
legend.text = element_text(family = "serif", size = (10)),
axis.title = element_text(family = "serif", size = (11),
face = "bold"),
axis.text = element_text(family = "serif", size = (11)),
plot.title = element_text(family = "serif", size = (12),
face = "bold"))
p2 <- mis_plus20 %>%
ggplot(aes(x = family, y = number, fill = taxon))+
geom_bar(stat = "identity", position = "dodge") +
scale_fill_manual(values = c("#d8b365", "#5ab4ac"),
name = "Taxa",
breaks = c("unique_genus", "unique_sp"),
labels = c("Genus", "Species"))+
coord_flip()+
xlab("Family")+
ylab("Missing number")+
ggtitle("Famílias com mais de 20 gêneros faltando no Flora")+
theme_bw()+
theme(legend.position = "bottom",
legend.title = element_text(family = "serif", size = (11),
face = "bold"),
legend.text = element_text(family = "serif", size = (10)),
axis.title = element_text(family = "serif", size = (11),
face = "bold"),
axis.text = element_text(family = "serif", size = (11)),
plot.title = element_text(family = "serif", size = (12),
face = "bold"))
p2
p2 <- mis_plus20 %>%
ggplot(aes(x = family, y = number, fill = taxon))+
geom_bar(stat = "identity", position = "dodge") +
scale_fill_manual(values = c("#d8b365", "#5ab4ac"),
name = "Taxa",
breaks = c("unique_genus", "unique_sp"),
labels = c("Gênero", "Espécies"))+
coord_flip()+
xlab("Família")+
ylab("Número de taxa faltante")+
ggtitle("Famílias com mais de 20 gêneros com espécies faltando no Flora")+
theme_bw()+
theme(legend.position = "bottom",
legend.title = element_text(family = "serif", size = (11),
face = "bold"),
legend.text = element_text(family = "serif", size = (10)),
axis.title = element_text(family = "serif", size = (11),
face = "bold"),
axis.text = element_text(family = "serif", size = (11)),
plot.title = element_text(family = "serif", size = (12),
face = "bold"))
p2
png("text/Figures/missing_plus20.png",
width = 17, height = 18, units = "cm",
pointsize = 8, res = 300)
p2 <- mis_plus20 %>%
ggplot(aes(x = family, y = number, fill = taxon))+
geom_bar(stat = "identity", position = "dodge") +
scale_fill_manual(values = c("#d8b365", "#5ab4ac"),
name = "Taxa",
breaks = c("unique_genus", "unique_sp"),
labels = c("Gênero", "Espécies"))+
coord_flip()+
xlab("Família")+
ylab("Número de taxa faltante")+
ggtitle("Famílias com mais de 20 gêneros com espécies faltando no Flora")+
theme_bw()+
theme(legend.position = "bottom",
legend.title = element_text(family = "serif", size = (11),
face = "bold"),
legend.text = element_text(family = "serif", size = (10)),
axis.title = element_text(family = "serif", size = (11),
face = "bold"),
axis.text = element_text(family = "serif", size = (11)),
plot.title = element_text(family = "serif", size = (12),
face = "bold"))
p2
dev.off()
