##subseting the angiosperm df
angio_fam = angiosperms_bra %>% filter(Família == fam_names[i])
##POWO species absent in Flora de Brasil
pow_abs = pow_df[-which(pow_df$taxon_name %in% angio_fam$taxon_name), ]
##if else statement for not saving empty dfs
if(dim(pow_abs)[1] == 0){
print("No absent species in Flora de Brasil")
} else{
##Saving automatically in the metadata folder
write_csv(pow_abs, file = "Data/Metadata/Angiosperms/", fam_names[i], ".csv")
##inserting a df inside each list with the missing species in the Flora Brazil
list_fam_ang[[i]] = pow_abs
}
}
##loop for finding missing species in the Flora de Brasil
for(i in seq_along(fam_names)){
##calling the species within families in POWO
pow_df = powoSpecies(family = fam_names[i], country = "Brazil")
##arranging taxa names
pow_df$taxon_name = str_replace(pow_df$taxon_name, " ", "_")
##subseting the angiosperm df
angio_fam = angiosperms_bra %>% filter(Família == fam_names[i])
##POWO species absent in Flora de Brasil
pow_abs = pow_df[-which(pow_df$taxon_name %in% angio_fam$taxon_name), ]
##if else statement for not saving empty dfs
if(dim(pow_abs)[1] == 0){
print("No absent species in Flora de Brasil")
} else{
##Saving automatically in the metadata folder
write_csv(pow_abs, file = "Data/Metadata/Angiosperms/", fam_names[i], ".csv")
##inserting a df inside each list with the missing species in the Flora Brazil
list_fam_ang[[i]] = pow_abs
}
}
View(list_fam_ang)
######creating list for keeping the missing species within the families
list_fam_ang <- vector("list", length = length(fam_names))
##libraries
library(tidyverse)
library(expowo)
library(readxl)
##Libraries
library(tidyverse)
devtools::install_github("matildabrown/rWCVP")
powoSpecies(family = fam_names[77])
for(i in 77:78){
tryCatch({
pw = powoSpecies(family = fam_names[i], country = "Brazil")
return(pw)
}, error = function(e){
message("Absent family in POWO")
print(e)
})
}
##loop for finding missing species in the Flora de Brasil
for(i in 77:78){
##subseting the angiosperm df
angio_fam = angiosperms_bra %>% filter(Família == fam_names[i])
###tryCatch for handling the missing families in POWO
tryCatch({
##calling the species within families in POWO
pow_df = powoSpecies(family = fam_names[i], country = "Brazil")
return(pow_df)
}, error = function(e){
message("Absent family in POWO")
print(e)
})
##arranging taxa names
pow_df$taxon_name = str_replace(pow_df$taxon_name, " ", "_")
##POWO species absent in Flora de Brasil
pow_abs = pow_df[-which(pow_df$taxon_name %in% angio_fam$taxon_name), ]
##if else statement for not saving empty dfs
if(dim(pow_abs)[1] == 0){
print("No absent species in Flora de Brasil")
} else{
##Saving automatically in the metadata folder
write_csv(pow_abs, file = paste0("Data/Metadata/Angiosperms/", fam_names[i], ".csv"))
##inserting a df inside each list with the missing species in the Flora Brazil
list_fam_ang[[i]] = pow_abs
}
}
##libraries
library(tidyverse)
library(expowo)
library(readxl)
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("installR")
library(expowo)
library(readxl)
devtools::install_github("barnabywalker/kewr")
library(kewr)
install.packages("tidyverse")
install.packages("tidyverse")
library(tidyverse)
library(ggplot2)
library(tidyr)
library(dplyr)
#####exploring packages
search_ipni("Fabaceae")
?search_ipni
#####exploring packages
search_ipni("Fabaceae", filters = "species")
#####exploring packages
x <- search_ipni("Fabaceae", filters = "species")
View(x)
#####exploring packages
x <- tidy(search_ipni("Fabaceae", filters = "species"))
View(x)
View(x[[4]][[49]])
View(x[[4]][[21]])
search_ipni(list(distribution = "Brazil"))
y<- tidy(search_ipni(list(distribution = "Brazil")))
View(y)
search_ipni(list(genus="Poa"), limit=20)
tidy(search_ipni(list(genus="Poa"), limit=20))
tidy(search_ipni(list(genus="Poa", distribution = "Brazil"), limit=20))
x.1 <- tidy(search_ipni(list(family = fam_names[1], distribution = "Brazil")))
View(x.1)
x.1 <- tidy(search_ipni(list(family = fam_names[1], distribution = "Brazil",
limit = 2000)))
x.1 <- tidy(search_ipni(list(family = fam_names[1], distribution = "Brazil"),
limit = 2000))
x.1 <- tidy(search_ipni(list(family = fam_names[1], distribution = "Brazil"),
limit = 10))
View(x.1)
get_keywords()
x.1 <- tidy(search_ipni(list(family = fam_names[1], distribution = "Brazil"),
limit = 100))
View(x.1)
fam_names[1]
x.1 <- tidy(search_ipni(list(family = fam_names[1], distribution = "Brazil"),
limit = 1000))
View(x.1)
x.1 <- tidy(search_ipni(list(family = fam_names[1], distribution = "Brazil"),
limit = 1000, names_sep = "_"))
library(stringr)
library(stringr)
x.1$name <- str_replace(x.1$name, " ", "_")
View(x.1)
##arranging taxa names
ipni_df$name = str_replace_all(ipni_df$name, " ", "_")
x.1$name <- str_replace_all(x.1$name, " ", "_")
View(x.1)
##loop for finding missing species in the Flora de Brasil
for(i in seq_along(fam_names)){
}
##loop for finding missing species in the Flora de Brasil
for(i in seq_along(fam_names)){
##subseting the angiosperm df
angio_fam = angiosperms_bra %>% filter(Família == fam_names[i])
###tryCatch for handling the missing families in POWO
tryCatch({
##calling the species within families in POWO
ipni_df = tidy(search_ipni(list(family = fam_names[1],
distribution = "Brazil"),
limit = 1000)
return(ipni_df)
}, error = function(e){
message("Absent family in IPNI")
print(e)
})
##arranging taxa names
ipni_df$name = str_replace_all(ipni_df$name, " ", "_")
##POWO species absent in Flora de Brasil
ipni_abs = pow_df[-which(ipni_df$name %in% angio_fam$taxon_name), ]
##if else statement for not saving empty dfs
if(dim(pow_abs)[1] == 0){
print("No absent species in Flora de Brasil")
} else{
##Saving automatically in the metadata folder
write_csv(ipni_abs, file = paste0("Data/Metadata/Angiosperms/ipni", fam_names[i], ".csv"))
##inserting a df inside each list with the missing species in the Flora Brazil
list_fam_ang[[i]] = ipni_abs
}
}
##loop for finding missing species in the Flora de Brasil
for(i in seq_along(fam_names)){
##subseting the angiosperm df
angio_fam = angiosperms_bra %>% filter(Família == fam_names[i])
###tryCatch for handling the missing families in POWO
tryCatch({
##calling the species within families in POWO
ipni_df = tidy(search_ipni(list(family = fam_names[1],
distribution = "Brazil"),
limit = 1000)
return(ipni_df)
}, error = function(e){
message("Absent family in IPNI")
print(e)
})
##arranging taxa names
ipni_df$name = str_replace_all(ipni_df$name, " ", "_")
##POWO species absent in Flora de Brasil
ipni_abs = pow_df[-which(ipni_df$name %in% angio_fam$taxon_name), ]
##if else statement for not saving empty dfs
if(dim(pow_abs)[1] == 0){
print("No absent species in Flora de Brasil")
} else{
##Saving automatically in the metadata folder
write_csv(ipni_abs, file = paste0("Data/Metadata/Angiosperms/ipni", fam_names[i], ".csv"))
##inserting a df inside each list with the missing species in the Flora Brazil
list_fam_ang[[i]] = ipni_abs
}
}
seq_along(fam_names)
##loop for finding missing species in the Flora de Brasil
for(i in seq_along(fam_names)){
##subseting the angiosperm df
angio_fam = angiosperms_bra %>% filter(Família == fam_names[i])
###tryCatch for handling the missing families in POWO
tryCatch({
##calling the species within families in POWO
ipni_df = tidy(search_ipni(list(family = fam_names[1],
distribution = "Brazil"),
limit = 1000)
return(ipni_df)
}, error = function(e){
message("Absent family in IPNI")
print(e)
})
##arranging taxa names
ipni_df$name = str_replace_all(ipni_df$name, " ", "_")
##POWO species absent in Flora de Brasil
ipni_abs = pow_df[-which(ipni_df$name %in% angio_fam$taxon_name), ]
##if else statement for not saving empty dfs
if(dim(pow_abs)[1] == 0){
print("No absent species in Flora de Brasil")
} else{
##Saving automatically in the metadata folder
write_csv(ipni_abs, file = paste0("Data/Metadata/Angiosperms/ipni", fam_names[i], ".csv"))
##inserting a df inside each list with the missing species in the Flora Brazil
list_fam_ang[[i]] = ipni_abs
}
}
##loop for finding missing species in the Flora de Brasil
for(i in seq_along(fam_names)) {
##loop for finding missing species in the Flora de Brasil
for(i in seq_along(fam_names)){
##loop for finding missing species in the Flora de Brasil
for(i in seq_along(fam_names)){
##loop for finding missing species in the Flora de Brasil
for(i in seq_along(fam_names)){
##subseting the angiosperm df
angio_fam = angiosperms_bra %>% filter(Família == fam_names[i])
###tryCatch for handling the missing families in POWO
tryCatch({
##calling the species within families in POWO
ipni_df = tidy(search_ipni(list(family = fam_names[1],
distribution = "Brazil"),
limit = 1000))
return(ipni_df)
}, error = function(e){
message("Absent family in IPNI")
print(e)
})
##arranging taxa names
ipni_df$name = str_replace_all(ipni_df$name, " ", "_")
##POWO species absent in Flora de Brasil
ipni_abs = pow_df[-which(ipni_df$name %in% angio_fam$taxon_name), ]
##if else statement for not saving empty dfs
if(dim(pow_abs)[1] == 0){
print("No absent species in Flora de Brasil")
} else{
##Saving automatically in the metadata folder
write_csv(ipni_abs, file = paste0("Data/Metadata/Angiosperms/ipni", fam_names[i], ".csv"))
##inserting a df inside each list with the missing species in the Flora Brazil
list_fam_ang[[i]] = ipni_abs
}
}
##loop for finding missing species in the Flora de Brasil
for(i in seq_along(fam_names)){
##subseting the angiosperm df
angio_fam = angiosperms_bra %>% filter(Família == fam_names[i])
###tryCatch for handling the missing families in POWO
tryCatch({
##calling the species within families in POWO
ipni_df = tidy(search_ipni(list(family = fam_names[i],
distribution = "Brazil"),
limit = 1000))
return(ipni_df)
}, error = function(e){
message("Absent family in IPNI")
print(e)
})
##arranging taxa names
ipni_df$name = str_replace_all(ipni_df$name, " ", "_")
##POWO species absent in Flora de Brasil
ipni_abs = pow_df[-which(ipni_df$name %in% angio_fam$taxon_name), ]
##if else statement for not saving empty dfs
if(dim(pow_abs)[1] == 0){
print("No absent species in Flora de Brasil")
} else{
##Saving automatically in the metadata folder
write_csv(ipni_abs, file = paste0("Data/Metadata/Angiosperms/ipni", fam_names[i], ".csv"))
##inserting a df inside each list with the missing species in the Flora Brazil
list_fam_ang[[i]] = ipni_abs
}
}
##loop for finding missing species in the Flora de Brasil
for(i in seq_along(fam_names)){
##subseting the angiosperm df
angio_fam = angiosperms_bra %>% filter(Família == fam_names[i])
###tryCatch for handling the missing families in POWO
tryCatch({
##calling the species within families in POWO
ipni_df = tidy(search_ipni(list(family = fam_names[i],
distribution = "Brazil"),
limit = 1000))
return(ipni_df)
}, error = function(e){
message("Absent family in IPNI")
print(e)
})
##arranging taxa names
ipni_df$name = str_replace_all(ipni_df$name, " ", "_")
##POWO species absent in Flora de Brasil
ipni_abs = ipni_df[-which(ipni_df$name %in% angio_fam$taxon_name), ]
##if else statement for not saving empty dfs
if(dim(pow_abs)[1] == 0){
print("No absent species in Flora de Brasil")
} else{
##Saving automatically in the metadata folder
write_csv(ipni_abs, file = paste0("Data/Metadata/Angiosperms/ipni", fam_names[i], ".csv"))
##inserting a df inside each list with the missing species in the Flora Brazil
list_fam_ang[[i]] = ipni_abs
}
}
##subseting the angiosperm df
angio_fam = angiosperms_bra %>% filter(Família == fam_names[1])
View(angio_fam)
###tryCatch for handling the missing families in POWO
tryCatch({
##calling the species within families in POWO
ipni_df = tidy(search_ipni(list(family = fam_names[1],
distribution = "Brazil"),
limit = 1000))
return(ipni_df)
}, error = function(e){
message("Absent family in IPNI")
print(e)
})
View(ipni_df)
##arranging taxa names
ipni_df$name = str_replace_all(ipni_df$name, " ", "_")
##POWO species absent in Flora de Brasil
ipni_abs = ipni_df[-which(ipni_df$name %in% angio_fam$taxon_name), ]
View(ipni_abs)
library(readr)
View(ipni_abs)
##loop for finding missing species in the Flora de Brasil
for(i in seq_along(fam_names)){
##subseting the angiosperm df
angio_fam = angiosperms_bra %>% filter(Família == fam_names[i])
###tryCatch for handling the missing families in IPNI
tryCatch({
##calling the species within families in IPNI
ipni_df = tidy(search_ipni(list(family = fam_names[i],
distribution = "Brazil"),
limit = 1000))
return(ipni_df)
}, error = function(e){
message("Absent family in IPNI")
print(e)
})
##arranging taxa names
ipni_df$name = str_replace_all(ipni_df$name, " ", "_")
##POWO species absent in Flora de Brasil
ipni_abs = ipni_df[-which(ipni_df$name %in% angio_fam$taxon_name), ]
##if else statement for not saving empty dfs
if(dim(ipni_abs)[1] == 0){
print("No absent species in Flora de Brasil")
} else{
##Saving automatically in the metadata folder
write_csv(ipni_abs, file = paste0("Data/Metadata/Angiosperms/ipni", fam_names[i], ".csv"))
##inserting a df inside each list with the missing species in the Flora Brazil
list_fam_ang[[i]] = ipni_abs
}
}
View(list_fam_ang)
list_fam_ang[[8]]
View(list_fam_ang[[8]])
View(angiosperms_bra)
##family names
fam_names <- unique(angiosperms_bra$Família)
######creating list for keeping the missing species within the families
list_fam_ang <- vector("list", length = length(fam_names))
##naming
names(list_fam_ang) <- fam_names
##calling the species within families in IPNI
ipni_df = tidy(search_ipni(list(family = fam_names[1],
distribution = "Brazil"),
limit = 1000))
##filtering for only considering species
ipni_df = ipni_df %>% filter(rank == "spec.")
View(ipni_df)
##loop for finding missing species in the Flora de Brasil
for(i in seq_along(fam_names)){
##subseting the angiosperm df
angio_fam = angiosperms_bra %>% filter(Família == fam_names[i])
###tryCatch for handling the missing families in IPNI
tryCatch({
##calling the species within families in IPNI
ipni_df = tidy(search_ipni(list(family = fam_names[i],
distribution = "Brazil"),
limit = 1000))
return(ipni_df)
}, error = function(e){
message("Absent family in IPNI")
print(e)
})
##filtering for only considering species
ipni_df = ipni_df %>% filter(rank == "spec.")
#arranging taxa names
ipni_df$name = str_replace(ipni_df$name, " ", "_")
##POWO species absent in Flora de Brasil
ipni_abs = ipni_df[-which(ipni_df$name %in% angio_fam$taxon_name), ]
##if else statement for not saving empty dfs
if(dim(ipni_abs)[1] == 0){
print("No absent species in Flora de Brasil")
} else{
##Saving automatically in the metadata folder
write_csv(ipni_abs, file = paste0("Data/Metadata/Angiosperms/ipni/", fam_names[i], ".csv"))
##inserting a df inside each list with the missing species in the Flora Brazil
list_fam_ang[[i]] = ipni_abs
}
}
View(list_fam_ang)
list_fam_ang[["Acanthaceae"]]
######creating list for keeping the missing species within the families
list_fam_ang <- vector("list", length = length(fam_names))
##naming
names(list_fam_ang) <- fam_names
##loop for finding missing species in the Flora de Brasil
for(i in seq_along(fam_names)){
##subseting the angiosperm df
angio_fam = angiosperms_bra %>% filter(Família == fam_names[i])
###tryCatch for handling the missing families in IPNI
tryCatch({
##calling the species within families in IPNI
ipni_df = tidy(search_ipni(list(family = fam_names[i],
distribution = "Brazil"),
limit = 1000))
##filtering for only considering species
ipni_df = ipni_df %>% filter(rank == "spec.")
return(ipni_df)
}, error = function(e){
message("Absent family in IPNI")
print(e)
})
#arranging taxa names
ipni_df$name = str_replace(ipni_df$name, " ", "_")
##POWO species absent in Flora de Brasil
ipni_abs = ipni_df[-which(ipni_df$name %in% angio_fam$taxon_name), ]
##if else statement for not saving empty dfs
if(dim(ipni_abs)[1] == 0){
print("No absent species in Flora de Brasil")
} else{
##Saving automatically in the metadata folder
write_csv(ipni_abs, file = paste0("Data/Metadata/Angiosperms/ipni/", fam_names[i], ".csv"))
##inserting a df inside each list with the missing species in the Flora Brazil
list_fam_ang[[i]] = ipni_abs
}
}
View(list_fam_ang)
View(list_fam_ang[["Burmanniaceae"]])
###removing null elements
list_fam_ipni = list_fam_ang[-which(sapply(list_fam_ang, is.null))]
View(list_fam_ipni)
View(list_fam_ipni[["Acanthaceae"]])
list_fam_ipni_1 <- sapply(list_fam_ipni, function(x) x %>% select(name, authors,
family, genus, species,
distribution,
publicationYear,
publicationId,
id))
View(list_fam_ipni_1)
list_fam_ipni_1 <- lapply(list_fam_ipni, function(x) x %>% select(name, authors,
family, genus, species,
distribution,
publicationYear,
publicationId,
id))
View(list_fam_ipni_1)
list_fam_ipni_1[["Acanthaceae"]]
library(readxl)
list_families_ipni <- do.call(list_fam_ipni_1, "rbind")
list_families_ipni <- do.call("rbind", list_fam_ipni_1)
View(list_families_ipni)
install.packages("xlsx")
##family names
fam_ipni <- names(list_fam_ipni_1)
fam_ipni
library(xlsx)
library(xlsx)
install.packages("xlsx")
library(xlsx)
install.packages("xlsx", dependencies=TRUE)
library(xlsx)
?write_excel_csv
install.packages("rJava")
library(xlsx)
library(rJava)
##collapsing the list in a df
df_ipni_families <- do.call("rbind", list_fam_ipni_1)
View(df_ipni_families)
rownames(df_ipni_families) <- NULL
View(df_ipni_families)
##writing
write_csv(df_ipni_families, file = "Data/Metadata/Angiosperms/ipni/ipni_fam_abs.csv")
##saving list
save(list_fam_ipni_1, file = "Data/Metadata/Angiosperms/ipni/ipni_fam_abs.RData")
