powo_df = powo_df %>% filter(rank == "Species")
#arranging taxa names
powo_df$name = str_replace(powo_df$name, " ", "_")
powo_df[,c('genus', 'species')] = str_split_fixed(powo_df$name, '_', 2)
powo_df = powo_df %>% relocate(family, genus, species, author)
##POWO species absent in Flora de Brasil
powo_abs = powo_df[-which(powo_df$name %in% angio_fam$taxon_name), ]
View(powo_abs)
##if else statement for not saving empty dfs
if(dim(powo_abs)[1] == 0){
print("No absent species in Flora de Brasil")
} else{
##inserting a df inside each list with the missing species in the
list_fam_ang_powo[[8]] = powo_abs
write_xlsx(powo_abs, path = paste0("Data/Metadata/Angiosperms/powo/",
fam_names[8],
".xlsx"))
}
fam_names[8]
######creating list for keeping the missing species within the families
list_fam_ang_powo <- vector("list", length = length(fam_names))
##naming
names(list_fam_ang_powo) <- fam_names
##loop for finding missing species in the Flora de Brasil
for(i in seq_along(fam_names)){
##subseting the angiosperm df
angio_fam = angiosperms_bra %>% filter(Família == fam_names[i])
###tryCatch for handling the missing families in POWO
tryCatch({
##calling the species within families in POWO
powo_df = tidy(search_powo(list(family = fam_names[i],
distribution = "Brazil"),
limit = 1000))
##filtering for only considering species
powo_df = powo_df %>% filter(rank == "Species")
return(powo_df)
}, error = function(e){
message("Absent family in POWO")
print(e)
})
#arranging taxa names
powo_df$name = str_replace(powo_df$name, " ", "_")
powo_df[,c('genus', 'species')] = str_split_fixed(powo_df$name, '_', 2)
powo_df = powo_df %>% relocate(family, genus, species, author)
##POWO species absent in Flora de Brasil
powo_abs = powo_df[-which(powo_df$name %in% angio_fam$taxon_name), ]
##if else statement for not saving empty dfs
if(dim(powo_abs)[1] == 0){
print("No absent species in Flora de Brasil")
} else{
##inserting a df inside each list with the missing species in the
list_fam_ang_powo[[i]] = powo_abs
write_xlsx(powo_abs, path = paste0("Data/Metadata/Angiosperms/powo/",
fam_names[i],
".xlsx"))
}
}
###tryCatch for handling the missing families in POWO
tryCatch({
##calling the species within families in POWO
powo_df = tidy(search_powo(list(family = fam_names[7],
distribution = "Brazil"),
limit = 1000))
##filtering for only considering species
powo_df = powo_df %>% filter(rank == "Species")
return(powo_df)
}, error = function(e){
message("Absent family in POWO")
print(e)
})
###tryCatch for handling the missing families in POWO
tryCatch({
##calling the species within families in POWO
powo_df = tidy(search_powo(list(family = fam_names[6],
distribution = "Brazil"),
limit = 1000))
##filtering for only considering species
powo_df = powo_df %>% filter(rank == "Species")
return(powo_df)
}, error = function(e){
message("Absent family in POWO")
print(e)
})
fam_names[6]
##calling the species within families in POWO
powo_df = tidy(search_powo(list(family = fam_names[6],
distribution = "Brazil"),
limit = 1000))
##filtering for only considering species
powo_df = powo_df %>% filter(rank == "Species")
##loop for finding missing species in the Flora de Brasil
for(i in 6){
##subseting the angiosperm df
angio_fam = angiosperms_bra %>% filter(Família == fam_names[i])
###tryCatch for handling the missing families in POWO
tryCatch({
##calling the species within families in POWO
powo_df = tidy(search_powo(list(family = fam_names[i],
distribution = "Brazil"),
limit = 1000))
##filtering for only considering species
powo_df = powo_df %>% filter(rank == "Species")
return(powo_df)
}, error = function(e){
message("Absent family in POWO")
print(e)
})
#arranging taxa names
powo_df$name = str_replace(powo_df$name, " ", "_")
powo_df[,c('genus', 'species')] = str_split_fixed(powo_df$name, '_', 2)
powo_df = powo_df %>% relocate(family, genus, species, author)
##POWO species absent in Flora de Brasil
powo_abs = powo_df[-which(powo_df$name %in% angio_fam$taxon_name), ]
##if else statement for not saving empty dfs
if(dim(powo_abs)[1] == 0){
print("No absent species in Flora de Brasil")
} else{
##inserting a df inside each list with the missing species in the
list_fam_ang_powo[[i]] = powo_abs
write_xlsx(powo_abs, path = paste0("Data/Metadata/Angiosperms/powo/",
fam_names[i],
".xlsx"))
}
}
##loop for finding missing species in the Flora de Brasil
for(i in 5){
##subseting the angiosperm df
angio_fam = angiosperms_bra %>% filter(Família == fam_names[i])
###tryCatch for handling the missing families in POWO
tryCatch({
##calling the species within families in POWO
powo_df = tidy(search_powo(list(family = fam_names[i],
distribution = "Brazil"),
limit = 1000))
##filtering for only considering species
powo_df = powo_df %>% filter(rank == "Species")
return(powo_df)
}, error = function(e){
message("Absent family in POWO")
print(e)
})
#arranging taxa names
powo_df$name = str_replace(powo_df$name, " ", "_")
powo_df[,c('genus', 'species')] = str_split_fixed(powo_df$name, '_', 2)
powo_df = powo_df %>% relocate(family, genus, species, author)
##POWO species absent in Flora de Brasil
powo_abs = powo_df[-which(powo_df$name %in% angio_fam$taxon_name), ]
##if else statement for not saving empty dfs
if(dim(powo_abs)[1] == 0){
print("No absent species in Flora de Brasil")
} else{
##inserting a df inside each list with the missing species in the
list_fam_ang_powo[[i]] = powo_abs
write_xlsx(powo_abs, path = paste0("Data/Metadata/Angiosperms/powo/",
fam_names[i],
".xlsx"))
}
}
##loop for finding missing species in the Flora de Brasil
for(i in 4){
##subseting the angiosperm df
angio_fam = angiosperms_bra %>% filter(Família == fam_names[i])
###tryCatch for handling the missing families in POWO
tryCatch({
##calling the species within families in POWO
powo_df = tidy(search_powo(list(family = fam_names[i],
distribution = "Brazil"),
limit = 1000))
##filtering for only considering species
powo_df = powo_df %>% filter(rank == "Species")
return(powo_df)
}, error = function(e){
message("Absent family in POWO")
print(e)
})
#arranging taxa names
powo_df$name = str_replace(powo_df$name, " ", "_")
powo_df[,c('genus', 'species')] = str_split_fixed(powo_df$name, '_', 2)
powo_df = powo_df %>% relocate(family, genus, species, author)
##POWO species absent in Flora de Brasil
powo_abs = powo_df[-which(powo_df$name %in% angio_fam$taxon_name), ]
##if else statement for not saving empty dfs
if(dim(powo_abs)[1] == 0){
print("No absent species in Flora de Brasil")
} else{
##inserting a df inside each list with the missing species in the
list_fam_ang_powo[[i]] = powo_abs
write_xlsx(powo_abs, path = paste0("Data/Metadata/Angiosperms/powo/",
fam_names[i],
".xlsx"))
}
}
##loop for finding missing species in the Flora de Brasil
for(i in 3){
##subseting the angiosperm df
angio_fam = angiosperms_bra %>% filter(Família == fam_names[i])
###tryCatch for handling the missing families in POWO
tryCatch({
##calling the species within families in POWO
powo_df = tidy(search_powo(list(family = fam_names[i],
distribution = "Brazil"),
limit = 1000))
##filtering for only considering species
powo_df = powo_df %>% filter(rank == "Species")
return(powo_df)
}, error = function(e){
message("Absent family in POWO")
print(e)
})
#arranging taxa names
powo_df$name = str_replace(powo_df$name, " ", "_")
powo_df[,c('genus', 'species')] = str_split_fixed(powo_df$name, '_', 2)
powo_df = powo_df %>% relocate(family, genus, species, author)
##POWO species absent in Flora de Brasil
powo_abs = powo_df[-which(powo_df$name %in% angio_fam$taxon_name), ]
##if else statement for not saving empty dfs
if(dim(powo_abs)[1] == 0){
print("No absent species in Flora de Brasil")
} else{
##inserting a df inside each list with the missing species in the
list_fam_ang_powo[[i]] = powo_abs
write_xlsx(powo_abs, path = paste0("Data/Metadata/Angiosperms/powo/",
fam_names[i],
".xlsx"))
}
}
##loop for finding missing species in the Flora de Brasil
for(i in 2){
##subseting the angiosperm df
angio_fam = angiosperms_bra %>% filter(Família == fam_names[i])
###tryCatch for handling the missing families in POWO
tryCatch({
##calling the species within families in POWO
powo_df = tidy(search_powo(list(family = fam_names[i],
distribution = "Brazil"),
limit = 1000))
##filtering for only considering species
powo_df = powo_df %>% filter(rank == "Species")
return(powo_df)
}, error = function(e){
message("Absent family in POWO")
print(e)
})
#arranging taxa names
powo_df$name = str_replace(powo_df$name, " ", "_")
powo_df[,c('genus', 'species')] = str_split_fixed(powo_df$name, '_', 2)
powo_df = powo_df %>% relocate(family, genus, species, author)
##POWO species absent in Flora de Brasil
powo_abs = powo_df[-which(powo_df$name %in% angio_fam$taxon_name), ]
##if else statement for not saving empty dfs
if(dim(powo_abs)[1] == 0){
print("No absent species in Flora de Brasil")
} else{
##inserting a df inside each list with the missing species in the
list_fam_ang_powo[[i]] = powo_abs
write_xlsx(powo_abs, path = paste0("Data/Metadata/Angiosperms/powo/",
fam_names[i],
".xlsx"))
}
}
##loop for finding missing species in the Flora de Brasil
for(i in 3){
##subseting the angiosperm df
angio_fam = angiosperms_bra %>% filter(Família == fam_names[i])
###tryCatch for handling the missing families in POWO
tryCatch({
##calling the species within families in POWO
powo_df = tidy(search_powo(list(family = fam_names[i],
distribution = "Brazil"),
limit = 1000))
##filtering for only considering species
powo_df = powo_df %>% filter(rank == "Species")
return(powo_df)
}, error = function(e){
message("Absent family in POWO")
print(e)
})
#arranging taxa names
powo_df$name = str_replace(powo_df$name, " ", "_")
powo_df[,c('genus', 'species')] = str_split_fixed(powo_df$name, '_', 2)
powo_df = powo_df %>% relocate(family, genus, species, author)
##POWO species absent in Flora de Brasil
powo_abs = powo_df[-which(powo_df$name %in% angio_fam$taxon_name), ]
##if else statement for not saving empty dfs
if(dim(powo_abs)[1] == 0){
print("No absent species in Flora de Brasil")
} else{
##inserting a df inside each list with the missing species in the
list_fam_ang_powo[[i]] = powo_abs
write_xlsx(powo_abs, path = paste0("Data/Metadata/Angiosperms/powo/",
fam_names[i],
".xlsx"))
}
}
######creating list for keeping the missing species within the families
list_fam_ang_powo <- vector("list", length = length(fam_names))
##naming
names(list_fam_ang_powo) <- fam_names
##loop for finding missing species in the Flora de Brasil
for(i in seq_along(fam_names)){
##subseting the angiosperm df
angio_fam = angiosperms_bra %>% filter(Família == fam_names[i])
###tryCatch for handling the missing families in POWO
tryCatch({
##calling the species within families in POWO
powo_df = tidy(search_powo(list(family = fam_names[i],
distribution = "Brazil"),
limit = 1000))
##filtering for only considering species
powo_df = powo_df %>% filter(rank == "Species")
return(powo_df)
}, error = function(e){
message("Absent family in POWO")
print(e)
})
#arranging taxa names
powo_df$name = str_replace(powo_df$name, " ", "_")
powo_df[,c('genus', 'species')] = str_split_fixed(powo_df$name, '_', 2)
powo_df = powo_df %>% relocate(family, genus, species, author)
##POWO species absent in Flora de Brasil
powo_abs = powo_df[-which(powo_df$name %in% angio_fam$taxon_name), ]
##if else statement for not saving empty dfs
if(dim(powo_abs)[1] == 0){
print("No absent species in Flora de Brasil")
} else{
##inserting a df inside each list with the missing species in the
list_fam_ang_powo[[i]] = powo_abs
write_xlsx(powo_abs, path = paste0("Data/Metadata/Angiosperms/powo/",
fam_names[i],
".xlsx"))
}
}
######creating list for keeping the missing species within the families
list_fam_ang <- vector("list", length = length(fam_names))
##naming
names(list_fam_ang) <- fam_names
##loop for finding missing species in the Flora de Brasil
for(i in seq_along(fam_names)){
##subseting the angiosperm df
angio_fam = angiosperms_bra %>% filter(Família == fam_names[i])
###tryCatch for handling the missing families in IPNI
tryCatch({
##calling the species within families in IPNI
ipni_df = tidy(search_ipni(list(family = fam_names[i],
distribution = "Brazil"),
limit = 1000))
##filtering for only considering species
ipni_df = ipni_df %>% filter(rank == "spec.")
return(ipni_df)
}, error = function(e){
message("Absent family in IPNI")
print(e)
})
#arranging taxa names
ipni_df$name = str_replace(ipni_df$name, " ", "_")
##IPNI species absent in Flora de Brasil
ipni_abs = ipni_df[-which(ipni_df$name %in% angio_fam$taxon_name), ]
##if else statement for not saving empty dfs
if(dim(ipni_abs)[1] == 0){
print("No absent species in Flora de Brasil")
} else{
##inserting a df inside each list with the missing species in the Flora Brazil
list_fam_ang[[i]] = ipni_abs
}
}
View(list_fam_ang)
######creating list for keeping the missing species within the families
list_fam_ang_powo <- vector("list", length = length(fam_names))
##naming
names(list_fam_ang_powo) <- fam_names
View(list_fam_ang_powo)
##loop for finding missing species in the Flora de Brasil
for(i in seq_along(fam_names)){
##subseting the angiosperm df
angio_fam = angiosperms_bra %>% filter(Família == fam_names[i])
###tryCatch for handling the missing families in POWO
tryCatch({
##calling the species within families in POWO
powo_df = tidy(search_powo(list(family = fam_names[i],
distribution = "Brazil"),
limit = 1000))
##filtering for only considering species
powo_df = powo_df %>% filter(rank == "Species")
return(powo_df)
}, error = function(e){
message("Absent family in POWO")
print(e)
})
#arranging taxa names
powo_df$name = str_replace(powo_df$name, " ", "_")
##POWO species absent in Flora de Brasil
powo_abs = powo_df[-which(powo_df$name %in% angio_fam$taxon_name), ]
##if else statement for not saving empty dfs
if(dim(powo_abs)[1] == 0){
print("No absent species in Flora de Brasil")
} else{
powo_abs[,c('genus', 'species')] = str_split_fixed(powo_abs$name, '_', 2)
powo_abs = powo_abs %>% relocate(family, genus, species, author)
##inserting a df inside each list with the missing species in the
list_fam_ang_powo[[i]] = powo_abs
write_xlsx(powo_abs, path = paste0("Data/Metadata/Angiosperms/powo/",
fam_names[i],
".xlsx"))
}
}
###removing null elements
list_fam_powo = list_fam_ang_powo[-which(sapply(list_fam_ang_powo, is.null))]
##saving list
save(list_fam_powo, file = "Data/Metadata/Angiosperms/powo/powo_fam_abs.RData")
View(list_fam_powo)
##collapsing the list in a df
df_powo_families <- do.call("rbind", list_fam_powo)
rownames(df_powo_families) <- NULL
##writing
write_csv(df_powo_families,
file = "Data/Metadata/Angiosperms/powo/powo_fam_abs.csv")
######creating list for keeping the missing species within the families
list_fam_ang_wcvp <- vector("list", length = length(fam_names))
##calling the species within families in wcvp
wcvp_df = tidy(search_wcvp(list(family = fam_names[1],
distribution = "Brazil"),
limit = 1000))
##calling the species within families in wcvp
wcvp_df = tidy(search_wcvp(list(family = fam_names[1]),
limit = 1000))
fam_names
library(kewr)
library(dplyr)
library(readr)
library(readxl)
library(plyr)
library(kewr)
devtools::install_github("barnabywalker/kewr")
library(kewr)
library(dplyr)
library(readr)
library(readxl)
library(plyr)
fam1 <- read_excel(path = "Data/Raw/exsicatas_HV/Acanthaceae_HV.xlsx")
View(fam1)
warnings()
colnames(fam1)
fam1 <- fam1 %>% filter(`Rank:` == "Espécie")
View(fam1)
View(df_ipni_families)
mis_fam_1 <- df_ipni_families %>% filter(family == "Acanthaceae")
View(mis_fam_1)
fam1$Gênero %in% mis_fam_1$genus
fam_ex = fam1[,fam1$Gênero %in% mis_fam_1$genus]
fam_ex = fam1[fam1$Gênero %in% mis_fam_1$genus, ]
View(fam_ex)
fam_ex = fam_ex[fam_ex$Espécie %in% mis_fam_1$species,]
View(fam_ex)
unique(fam_ex$Espécie)
length(unique(fam_ex$Espécie))
View(df_ipni_families)
#########assigning source
df_ipni_families$source <- "IPNI"
df_powo_families$source <- "POWO"
View(df_powo_families)
View(df_ipni_families)
library(stringr)
df_ipni_families$name <- str_c(df_ipni_families$genus,
df_ipni_families$species, sep = "_")
View(df_ipni_families)
##writing
write_csv(df_ipni_families,
file = "Data/Metadata/Angiosperms/ipni/ipni_fam_abs.csv")
#########defining which species are in POWO but absent in IPNI
x.powo <- df_powo_families[-which(df_powo_families$name %in% df_ipni_families$name),]
View(x.powo)
x.ipni <- df_ipni_families[-which(df_ipni_families$name %in% df_powo_families$name),]
View(x.powo)
View(x.ipni)
df_ipni_powo_absent <- rbind.fill(df_ipni_families, x.powo)
View(df_ipni_powo_absent)
length(unique(df_ipni_powo_absent))
length(unique(df_ipni_powo_absent$name))
duplicated(df_ipni_powo_absent)
duplicated(df_ipni_powo_absent$name)
df_ipni_powo_absent$name[which(duplicated(df_ipni_powo_absent$name))]
duplicated(df_ipni_families$name)
df_ipni_families$name[which(duplicated(df_ipni_families$name))]
duplicated(angiosperms_bra$Espécie)
duplicated(angiosperms_bra$taxon_name)
df_ipni_families_1 <- df_ipni_families[-which(duplicated(df_ipni_families$name)),]
View(df_ipni_families_1)
##eliminating duplicated species
df_ipni_families <- df_ipni_families[-which(duplicated(df_ipni_families$name)),]
##writing
write_csv(df_ipni_families,
file = "Data/Metadata/Angiosperms/ipni/ipni_fam_abs.csv")
#########assigning source
df_ipni_families$source <- "IPNI"
df_powo_families$source <- "POWO"
#########defining which species are in POWO but absent in IPNI
x.powo <- df_powo_families[-which(df_powo_families$name %in% df_ipni_families$name),]
df_ipni_powo_absent <- rbind.fill(df_ipni_families, x.powo)
View(df_ipni_powo_absent)
22-17
install.packages("writexl")
library(writexl)
###
write_xlsx(df_ipni_powo_absent,
file = "Data/Metadata/Angiosperms/df_absent_sp_flora.xlsx")
?write_xlsx
###
write_xlsx(df_ipni_powo_absent,
path = "Data/Metadata/Angiosperms/df_absent_sp_flora.xlsx")
###
write_xlsx(df_ipni_powo_absent,
path = "Data/Processed/Angiosperms/df_absent_sp_flora.xlsx")
