list_fam_ipni[[i]]$status = "Accepted"
list_fam_ipni[[i]]$scientific_name = paste(list_fam_ipni[[i]]$genus,
list_fam_ipni[[i]]$species,
list_fam_ipni[[i]]$authors)
list_fam_ipni[[i]]$source = "IPNI"
list_fam_ipni[[i]]$url = paste0("www.ipni.org", list_fam_ipni[[i]]$url)
list_fam_ipni[[i]] = list_fam_ipni[[i]] %>% rename(taxon_name = name,
kew_id = id,
citation_type = citationType) %>%
select(family, genus, species, taxon_name, authors,
scientific_name, status, reference, hybrid, distribution,
kew_id, url, source, publicationYear, citation_type)
}
View(list_fam_ipni)
View(list_fam_ipni[["Acanthaceae"]])
unique(x$citation_type)
unique(y$citation_type)
y %>% mutate(citation_type = if_else(citation_type == "tax. nov.",
"taxon_nov", citation_type))
y = y %>% mutate(citation_type = if_else(citation_type == "tax. nov.",
"taxon_nov", citation_type))
unique(x$citation_type)
unique(y$citation_type)
load("/Data/Metadata/Angiosperms/ipni_abs/ipni_fam_abs_2.RData")
load("C:/Users/OD32382/Desktop/Post doc/Domingos/Floristic_manipulation/Data/Metadata/Angiosperms/ipni_abs/ipni_fam_abs_2.RData")
View(list_fam_ipni)
for(i in seq_along(list_fam_ipni)) {
list_fam_ipni[[i]]$status = "Accepted"
list_fam_ipni[[i]]$scientific_name = paste(list_fam_ipni[[i]]$genus,
list_fam_ipni[[i]]$species,
list_fam_ipni[[i]]$authors)
list_fam_ipni[[i]]$source = "IPNI"
list_fam_ipni[[i]]$url = paste0("www.ipni.org", list_fam_ipni[[i]]$url)
list_fam_ipni[[i]] = list_fam_ipni[[i]] %>% rename(taxon_name = name,
kew_id = id,
citation_type = citationType) %>%
select(family, genus, species, taxon_name, authors,
scientific_name, status, reference, hybrid, distribution,
kew_id, url, source, publicationYear, citation_type)%>%
mutate(citation_type = if_else(citation_type == "tax. nov.",
"taxon_novo", citation_type))
}
View(list_fam_ipni)
View(list_exp)
load("C:/Users/OD32382/Desktop/Post doc/Domingos/Floristic_manipulation/Data/Metadata/Angiosperms/ipni_abs/ipni_fam_abs_2.RData")
for(i in seq_along(list_fam_ipni)) {
list_fam_ipni[[i]]$status = "Accepted"
list_fam_ipni[[i]]$scientific_name = paste(list_fam_ipni[[i]]$genus,
list_fam_ipni[[i]]$species,
list_fam_ipni[[i]]$authors)
list_fam_ipni[[i]]$source = "IPNI"
list_fam_ipni[[i]]$url = paste0("www.ipni.org", list_fam_ipni[[i]]$url)
list_fam_ipni[[i]]$native_to_botanical_countries = NA
list_fam_ipni[[i]]$introduce_to_country = NA
list_fam_ipni[[i]]$introduce_to_botanical_countries = NA
list_fam_ipni[[i]] = list_fam_ipni[[i]] %>% rename(taxon_name = name,
kew_id = id,
citation_type = citationType) %>%
select(family, genus, species, taxon_name, authors,
scientific_name, status, reference, hybrid, distribution,
native_to_botanical_countries, introduce_to_country,
introduce_to_botanical_countries,
kew_id, url, source, publicationYear, citation_type)%>%
mutate(citation_type = if_else(citation_type == "tax. nov.",
"taxon_novo", citation_type))
}
View(list_fam_ipni)
View(list_expowo)
View(list_expowo[["Acanthaceae"]])
list_exp[["Acanthaceae"]]$accepted_name
list_expowo = vector("list", length = length(list_exp))
for(i in seq_along(list_expowo)){
list_expowo[[i]] = list_exp[[i]]
##create the source column
list_expowo[[i]]$source = "POWO"
##changing hybrid column
list_expowo[[i]]$hybrid = factor(list_expowo[[i]]$hybrid, levels = c("FALSE"))
##renaming and creating columns
list_expowo[[i]] = list_expowo[[i]] %>% select(-accepted_name) %>%
rename(reference = publication,
distribution = native_to_country,
url = powo_uri) %>%
mutate(publicationYear = stri_extract_last_regex(reference,
"\\d{4}"),
citation_type = case_when(is.na(authors) ~ NA,
!is.na(authors) & grepl("(", authors, fixed = TRUE) == TRUE ~ "comb_nova",
!is.na(authors) & grepl("(", authors, fixed = TRUE) == FALSE ~ "taxon_novo"))
}
list_expowo = vector("list", length = length(list_exp))
for(i in seq_along(list_expowo)){
list_expowo[[i]] = list_exp[[i]]
##create the source column
list_expowo[[i]]$source = "POWO"
##changing hybrid column
list_expowo[[i]]$hybrid = factor(list_expowo[[i]]$hybrid, levels = c("FALSE"))
##renaming and creating columns
list_expowo[[i]] = list_expowo[[i]] %>% select(-accepted_name) %>%
rename(reference = publication,
distribution = native_to_country,
url = powo_uri) %>%
mutate(publicationYear = stri_extract_last_regex(reference,
"\\d{4}"),
citation_type = case_when(is.na(authors) ~ NA,
!is.na(authors) & grepl("(", authors, fixed = TRUE) == TRUE ~ "comb_nova",
!is.na(authors) & grepl("(", authors, fixed = TRUE) == FALSE ~ "taxon_novo"))
}
View(list_exp)
list_exp[["Acanthaceae"]]$accepted_name
list_expowo = vector("list", length = length(list_exp))
for(i in seq_along(list_expowo)){
list_expowo[[i]] = list_exp[[i]]
##create the source column
list_expowo[[i]]$source = "POWO"
##changing hybrid column
list_expowo[[i]]$hybrid = factor(list_expowo[[i]]$hybrid, levels = c("FALSE"))
##renaming and creating columns
list_expowo[[i]] = list_expowo[[i]] %>% select(-c(accepted_name)) %>%
rename(reference = publication,
distribution = native_to_country,
url = powo_uri) %>%
mutate(publicationYear = stri_extract_last_regex(reference,
"\\d{4}"),
citation_type = case_when(is.na(authors) ~ NA,
!is.na(authors) & grepl("(", authors, fixed = TRUE) == TRUE ~ "comb_nova",
!is.na(authors) & grepl("(", authors, fixed = TRUE) == FALSE ~ "taxon_novo"))
}
list_expowo = vector("list", length = length(list_exp))
for(i in seq_along(list_expowo)){
list_expowo[[i]] = list_exp[[i]]
##create the source column
list_expowo[[i]]$source = "POWO"
##changing hybrid column
list_expowo[[i]]$hybrid = factor(list_expowo[[i]]$hybrid, levels = c("FALSE"))
##renaming and creating columns
list_expowo[[i]] = list_expowo[[i]] %>%
rename(reference = publication,
distribution = native_to_country,
url = powo_uri) %>%
mutate(publicationYear = stri_extract_last_regex(reference,
"\\d{4}"),
citation_type = case_when(is.na(authors) ~ NA,
!is.na(authors) & grepl("(", authors, fixed = TRUE) == TRUE ~ "comb_nova",
!is.na(authors) & grepl("(", authors, fixed = TRUE) == FALSE ~ "taxon_novo"))
}
list_expowo[[2]]$accepted_name
##Naming
names(list_expowo) = str_remove_all(expowo_files, ".csv")
View(list_expowo)
list_expowo[["Acanthaceae"]]
list_expowo[["Acanthaceae"]] %>% select(-accepted_name)
colnames(list_expowo[[2]])
load("C:/Users/OD32382/Desktop/Post doc/Domingos/Floristic_manipulation/Data/Metadata/Angiosperms/ipni_abs/ipni_fam_abs_2.RData")
for(i in seq_along(list_fam_ipni)) {
list_fam_ipni[[i]]$status = "Accepted"
list_fam_ipni[[i]]$scientific_name = paste(list_fam_ipni[[i]]$genus,
list_fam_ipni[[i]]$species,
list_fam_ipni[[i]]$authors)
list_fam_ipni[[i]]$accepted_name = list_fam_ipni[[i]]$scientific_name
list_fam_ipni[[i]]$source = "IPNI"
list_fam_ipni[[i]]$url = paste0("www.ipni.org", list_fam_ipni[[i]]$url)
list_fam_ipni[[i]]$native_to_botanical_countries = NA
list_fam_ipni[[i]]$introduce_to_country = NA
list_fam_ipni[[i]]$introduce_to_botanical_countries = NA
list_fam_ipni[[i]] = list_fam_ipni[[i]] %>% rename(taxon_name = name,
kew_id = id,
citation_type = citationType) %>%
select(family, genus, species, taxon_name, authors,
scientific_name, status, accepted_name,
reference, hybrid, distribution,
native_to_botanical_countries, introduce_to_country,
introduce_to_botanical_countries,
kew_id, url, source, publicationYear, citation_type)%>%
mutate(citation_type = if_else(citation_type == "tax. nov.",
"taxon_novo", citation_type))
}
names_ipni = names(list_fam_ipni)
names_ipni
names_expowo = names(list_expowo)
which(names_expowo %in% names_ipni)
which(names_ipni %in% names_expowo)
names_ipni %in% names_expowo
sum(names_ipni %in% names_expowo)
x
x = list_expowo[[1]]
y = list_fam_ipni[[1]]
View(x)
View(y)
g = bind_rows(x, y) %>% group_by(taxon_name) %>% distinct()
x$hybrid
list_expowo = vector("list", length = length(list_exp))
for(i in seq_along(list_expowo)){
list_expowo[[i]] = list_exp[[i]]
##create the source column
list_expowo[[i]]$source = "POWO"
##renaming and creating columns
list_expowo[[i]] = list_expowo[[i]] %>%
rename(reference = publication,
distribution = native_to_country,
url = powo_uri) %>%
mutate(publicationYear = stri_extract_last_regex(reference,
"\\d{4}"),
citation_type = case_when(is.na(authors) ~ NA,
!is.na(authors) & grepl("(", authors, fixed = TRUE) == TRUE ~ "comb_nova",
!is.na(authors) & grepl("(", authors, fixed = TRUE) == FALSE ~ "taxon_novo"),
hybrid = if_else(hybrid == "FALSE",
"no", hybrid))
}
unique(list_expowo[[2]]$hybrid)
unique(list_exp[[2]]$hybrid)
View(list_exp)
View(list_exp)
View(list_exp[["Acanthaceae"]])
list_exp[["Acanthaceae"]]$hybrid
unique(list_exp[["Acanthaceae"]]$hybrid)
y = list_exp[["Acanthaceae"]]
y = y %>% mutate( hybrid = if_else(hybrid == "no",
"FALSE", hybrid))
View(y)
unique(y$hybrid)
list_expowo = vector("list", length = length(list_exp))
for(i in seq_along(list_expowo)){
list_expowo[[i]] = list_exp[[i]]
##create the source column
list_expowo[[i]]$source = "POWO"
##renaming and creating columns
list_expowo[[i]] = list_expowo[[i]] %>%
rename(reference = publication,
distribution = native_to_country,
url = powo_uri) %>%
mutate(publicationYear = stri_extract_last_regex(reference,
"\\d{4}"),
citation_type = case_when(is.na(authors) ~ NA,
!is.na(authors) & grepl("(", authors, fixed = TRUE) == TRUE ~ "comb_nova",
!is.na(authors) & grepl("(", authors, fixed = TRUE) == FALSE ~ "taxon_novo"),
hybrid = if_else(hybrid == "no",
"FALSE", hybrid))
}
unique(list_expowo[[2]]$hybrid)
unique(list_expowo[[1]]$hybrid)
levels(list_expowo[[1]]$hybrid)
##Naming
names(list_expowo) = str_remove_all(expowo_files, ".csv")
x = list_expowo[[1]]
y = list_fam_ipni[[1]]
#binding dataframes
g = bind_rows(x, y) %>% group_by(taxon_name) %>% distinct()
class(x$hybrid)
unique(x$hybrid)
list_expowo = vector("list", length = length(list_exp))
for(i in seq_along(list_expowo)){
list_expowo[[i]] = list_exp[[i]]
##create the source column
list_expowo[[i]]$source = "POWO"
##renaming and creating columns
list_expowo[[i]] = list_expowo[[i]] %>%
rename(reference = publication,
distribution = native_to_country,
url = powo_uri) %>%
mutate(publicationYear = stri_extract_last_regex(reference,
"\\d{4}"),
citation_type = case_when(is.na(authors) ~ NA,
!is.na(authors) & grepl("(", authors, fixed = TRUE) == TRUE ~ "comb_nova",
!is.na(authors) & grepl("(", authors, fixed = TRUE) == FALSE ~ "taxon_novo"),
hybrid = if_else(hybrid == "no",
"FALSE", hybrid),
hybrid = as.logical(hybrid))
}
##Naming
names(list_expowo) = str_remove_all(expowo_files, ".csv")
x = list_expowo[[1]]
levels(x$hybrid)
#binding dataframes
g = bind_rows(x, y) %>% group_by(taxon_name) %>% distinct()
x$publicationYear
y$publicationYear
list_expowo = vector("list", length = length(list_exp))
for(i in seq_along(list_expowo)){
list_expowo[[i]] = list_exp[[i]]
##create the source column
list_expowo[[i]]$source = "POWO"
##renaming and creating columns
list_expowo[[i]] = list_expowo[[i]] %>%
rename(reference = publication,
distribution = native_to_country,
url = powo_uri) %>%
mutate(publicationYear = stri_extract_last_regex(reference,
"\\d{4}"),
publicationYear = as.integer(publicationYear),
citation_type = case_when(is.na(authors) ~ NA,
!is.na(authors) & grepl("(", authors, fixed = TRUE) == TRUE ~ "comb_nova",
!is.na(authors) & grepl("(", authors, fixed = TRUE) == FALSE ~ "taxon_novo"),
hybrid = if_else(hybrid == "no",
"FALSE", hybrid),
hybrid = as.logical(hybrid))
}
##Naming
names(list_expowo) = str_remove_all(expowo_files, ".csv")
x = list_expowo[[1]]
y = list_fam_ipni[[1]]
#binding dataframes
g = bind_rows(x, y) %>% group_by(taxon_name) %>% distinct()
View(g)
duplicated(g$taxon_name)
#binding dataframes
g = bind_rows(x, y)
g = g[unique(g$taxon_name), ]
View(g)
#binding dataframes
g = bind_rows(x, y)
View(g)
unique(g$taxon_name)
!duplicated(g$taxon_name)
which(g$taxon_name %in% unique(g$taxon_name)
)
#binding dataframes
g = bind_rows(x, y) %>% distinct()
#binding dataframes
g = bind_rows(x, y) %>% group_by(taxon_name) %>% distinct()
View(g)
!duplicated(g$taxon_name)
#binding dataframes
g = bind_rows(x, y)
g = g[!duplicated(g$taxon_name), ]
View(g)
colnames(g)
load("C:/Users/OD32382/Desktop/Post doc/Domingos/Floristic_manipulation/Data/Metadata/Angiosperms/ipni_abs/ipni_fam_abs_2.RData")
for(i in seq_along(list_fam_ipni)) {
list_fam_ipni[[i]]$status = "Accepted"
list_fam_ipni[[i]]$scientific_name = paste(list_fam_ipni[[i]]$genus,
list_fam_ipni[[i]]$species,
list_fam_ipni[[i]]$authors)
list_fam_ipni[[i]]$accepted_name = list_fam_ipni[[i]]$scientific_name
list_fam_ipni[[i]]$source = "IPNI"
list_fam_ipni[[i]]$url = paste0("www.ipni.org", list_fam_ipni[[i]]$url)
list_fam_ipni[[i]]$native_to_botanical_countries = NA
list_fam_ipni[[i]]$introduced_to_country = NA
list_fam_ipni[[i]]$introduced_to_botanical_countries = NA
list_fam_ipni[[i]] = list_fam_ipni[[i]] %>% rename(taxon_name = name,
kew_id = id,
citation_type = citationType) %>%
select(family, genus, species, taxon_name, authors,
scientific_name, status, accepted_name,
reference, hybrid, distribution,
native_to_botanical_countries, introduce_to_country,
introduce_to_botanical_countries,
kew_id, url, source, publicationYear, citation_type)%>%
mutate(citation_type = if_else(citation_type == "tax. nov.",
"taxon_novo", citation_type))
}
load("C:/Users/OD32382/Desktop/Post doc/Domingos/Floristic_manipulation/Data/Metadata/Angiosperms/ipni_abs/ipni_fam_abs_2.RData")
for(i in seq_along(list_fam_ipni)) {
list_fam_ipni[[i]]$status = "Accepted"
list_fam_ipni[[i]]$scientific_name = paste(list_fam_ipni[[i]]$genus,
list_fam_ipni[[i]]$species,
list_fam_ipni[[i]]$authors)
list_fam_ipni[[i]]$accepted_name = list_fam_ipni[[i]]$scientific_name
list_fam_ipni[[i]]$source = "IPNI"
list_fam_ipni[[i]]$url = paste0("www.ipni.org", list_fam_ipni[[i]]$url)
list_fam_ipni[[i]]$native_to_botanical_countries = NA
list_fam_ipni[[i]]$introduced_to_country = NA
list_fam_ipni[[i]]$introduced_to_botanical_countries = NA
list_fam_ipni[[i]] = list_fam_ipni[[i]] %>% rename(taxon_name = name,
kew_id = id,
citation_type = citationType) %>%
select(family, genus, species, taxon_name, authors,
scientific_name, status, accepted_name,
reference, hybrid, distribution,
native_to_botanical_countries, introduced_to_country,
introduced_to_botanical_countries,
kew_id, url, source, publicationYear, citation_type)%>%
mutate(citation_type = if_else(citation_type == "tax. nov.",
"taxon_novo", citation_type))
}
View(list_fam_ipni)
x = list_expowo[[1]]
y = list_fam_ipni[[1]]
#binding dataframes
g = bind_rows(x, y)
g = g[!duplicated(g$taxon_name), ]
View(g)
sum(duplicated(g$taxon_name))
names_ipni = names(list_fam_ipni)
names_expowo = names(list_expowo)
match(names_expowo, names_ipni)
match(names_ipni, names_expowo)
h = match(names_ipni, names_expowo)
print(i)
for(i in h){
print(i)
}
h = match(names_expowo, names_ipni)
for(i in h){
print(i)
}
!which(names_expowo %in% names_ipni)
which(names_expowo %in% names_ipni)
h
names_expowo[1:5]
names_ipni[1:5]
h = match(names_ipni, names_expowo)
h
##looking for common family names in both dataframes
expo_com = which(names_expowo %in% names_ipni)
ipni_com = which(names_ipni %in% names_expowo)
ipni_com
length(expo_com)
length(ipni_com)
##subseting lists
list_expo_com = list_expowo[expo_com]
list_ipni_com = list_fam_ipni[ipni_com]
match(names(list_expo_com, list_ipni_com))
match(names(list_expo_com),names(list_ipni_com))
sum(match(names(list_expo_com),names(list_ipni_com)))
length(match(names(list_expo_com),names(list_ipni_com)))
View(list_ipni_com)
names(list_ipni_com) %in% names(list_expo_com)
which(names(list_ipni_com) %in% names(list_expo_com))
##empty list
list_combined = vector("list", length = length(list_ipni_com))
##empty list
list_combined = vector("list", length = length(list_ipni_com))
for(i in seq_along(list_expo_com)){
list_combined[[i]] = bind_rows(list_expo_com[[i]], list_ipni_com[[i]])
list_combined[[i]] = list_combined[[i]][!duplicated(list_combined[[i]]$taxon_name), ]
}
View(list_combined)
View(list_combined[[36]])
View(list_expo_com)
names(list_combined) = names(list_expo_com)
View(list_combined)
View(list_combined[["Gentianaceae"]])
##families only present in expowo
expo_only = !which(names_expowo %in% names_ipni)
##families only present in expowo
expo_only = list_expowo[-which(names_expowo %in% names_ipni)]
View(expo_only)
202-117
names_ipni == "Bixaceae"
##families only present in expowo
list_expo_only = list_expowo[-expo_com]
##families only present in IPNI
list_ipni_only = list_fam_ipni[-ipni_com]
View(list_ipni_only)
list_ipni_only[["Rosaceae"]]
###combining list
list_missing_data = c(list_combined, list_expo_only, list_ipni_only)
View(list_missing_data)
getwd()
save(list_missing_data, file = "C:/Users/OD32382/Desktop/Post doc/Domingos/Floristic_manipulation/Data/Processed/Angiosperms/missing_powo_ipni/list_missing.RData" )
df_missing <- do.call("rbind", list_missing_data)
df_missing <- do.call(rbind.data.frame, list_missing_data)
df_missing <- do.call(rbind, list_missing_data)
View(list_missing_data)
str(list_missing_data[["Acanthaceae"]])
View(list_missing_data[["Quiinaceae"]])
str(list_missing_data[["Quiinaceae"]])
df_missing <- do.call(rbind, list_missing_data)
df_missing <- do.call(bind_rows, list_missing_data)
View(df_missing)
library(writexl)
write_xlsx(df_missing, path = "C:/Users/OD32382/Desktop/Post doc/Domingos/Floristic_manipulation/Data/Processed/Angiosperms/missing_powo_ipni/df_missing.xlsx" )
write_csv(df_missing, file = "C:/Users/OD32382/Desktop/Post doc/Domingos/Floristic_manipulation/Data/Processed/Angiosperms/missing_powo_ipni/df_missing.csv")
for(i in seq_along(list_missing_data)){
tryCatch({
##reading excel files
write_xlsx(list_missing_data[[i]],
path = paste0(getwd(),
"/Data/Processed/Angiosperms/missing_powo_ipni/",
names(list_missing_data[[i]]), ".xlsx"))
}, error = function(e){
##enumerating the csv files
print(names(list_missing_data[[i]]))
})
}
names(list_missing_data[[2]])
##names missing
names_missing = names(list_missing_data)
names_missing
for(i in seq_along(list_missing_data)){
tryCatch({
##reading excel files
write_xlsx(list_missing_data[[i]],
path = paste0(getwd(),
"/Data/Processed/Angiosperms/missing_powo_ipni/",
names_missing[i], ".xlsx"))
}, error = function(e){
##enumerating the csv files
print(names_missing[i])
})
}
##some did not were converted to xlsx
csv_names = c("Apocynaceae", "Bignoniaceae", "Boraginaceae",
"Iridaceae","Rubiaceae")
##some did not were converted to xlsx
csv_names = c("Apocynaceae", "Bignoniaceae", "Boraginaceae",
"Iridaceae","Rubiaceae")
fd
csv_names
list_missing_data[[csv_names[i]]]
list_missing_data[[csv_names[1]]]
for(i in seq_along(csv_names)) {
write_csv(list_missing_data[[csv_names[i]]],
path = paste0(getwd(),
"/Data/Processed/Angiosperms/missing_powo_ipni/csv/",
csv_names[i], ".xlsx"))
}
for(i in seq_along(csv_names)) {
write_csv(list_missing_data[[csv_names[i]]],
file = paste0(getwd(),
"/Data/Processed/Angiosperms/missing_powo_ipni/csv/",
csv_names[i], ".csv"))
}
