##IPNI species absent in Flora de Brasil
ipni_abs = ipni_df[-which(ipni_df$name %in% angiosperms_bra$taxon_name), ]
##if else statement for not saving empty dfs
if(dim(ipni_abs)[1] == 0){
print("No absent species in Flora de Brasil")
} else{
##inserting a df inside each list with the missing species in the Flora Brazil
list_fam_ang[[i]] = ipni_abs
}
}
View(list_fam_ang)
list_fam_ang[["Acanthaceae"]]
View(list_fam_ang[["Acanthaceae"]])
###removing null elements
list_fam_ipni = list_fam_ang[-which(sapply(list_fam_ang, is.null))]
##saving list
save(list_fam_ipni, file = "Data/Metadata/Angiosperms/ipni_2/ipni_fam_abs_2.RData")
##saving list
save(list_fam_ipni, file = "Data/Metadata/Angiosperms/ipni_abs/ipni_fam_abs_2.RData")
##for loop for saving as xlsx each family
for(i in seq_along(list_fam_ipni)){
df = list_fam_ipni[[i]] %>% select(any_of(c("family", "genus", "species",
"authors", "citationType",
"rank", "hybrid", "reference",
"publication", "publicationYear",
"referenceCollation",
"publicationId", "suppressed",
"typeLocations", "collectorTeam",
"collectionNumber", "collectionDate1",
"distribution", "locality", "id",
"fqld", "inPowo", "wfold", "bhlLink",
"publicationYearNote", "remarks",
"referenceRemarks")))
write_xlsx(df, path = paste0("Data/Metadata/Angiosperms/ipni_abs/",
unique(list_fam_ipni[[i]]$family),
".xlsx"))
}
list_fam_ipni[[2]]
View(list_fam_ipni)
View(list_fam_ipni[["Acanthaceae"]])
x = list_fam_ipni[[2]] %>% mutate(url = paste0("www.ipni.org/n/", list_fam_ipni[[2]]$id))
View(x)
colnames(x)
View(list_fam_ipni[["Brunelliaceae"]])
View(list_fam_ipni[["Arecaceae"]])
##for loop for saving as xlsx each family
for(i in seq_along(list_fam_ipni)){
df = list_fam_ipni[[i]] %>% select(any_of(c("family", "genus", "species",
"authors", "citationType",
"rank", "hybrid", "reference",
"publication", "publicationYear",
"referenceCollation",
"publicationId", "suppressed",
"typeLocations", "collectorTeam",
"collectionNumber", "collectionDate1",
"distribution", "locality", "id",
"fqld", "inPowo", "wfold", "bhlLink",
"publicationYearNote", "remarks",
"referenceRemarks"))) %>%
mutate(url = paste0("www.ipni.org/n/", list_fam_ipni[[i]]$id))
df$citationType <- "tax_nov"
write_xlsx(df, path = paste0("Data/Metadata/Angiosperms/ipni_abs/",
unique(list_fam_ipni[[i]]$family),
".xlsx"))
}
##for loop for saving as xlsx each family
for(i in seq_along(list_fam_ipni)){
df = list_fam_ipni[[i]] %>% select(any_of(c("family", "genus", "species",
"authors", "citationType",
"rank", "hybrid", "reference",
"publication", "publicationYear",
"referenceCollation",
"publicationId", "suppressed",
"typeLocations", "collectorTeam",
"collectionNumber", "collectionDate1",
"distribution", "locality", "id",
"fqld", "inPowo", "wfold", "bhlLink",
"publicationYearNote", "remarks",
"referenceRemarks"))) %>%
mutate(url = paste0("www.ipni.org/n/", list_fam_ipni[[i]]$id))
df$citationType <- "tax_nov"
df$source <- "ipni"
write_xlsx(df, path = paste0("Data/Metadata/Angiosperms/ipni_abs/",
unique(list_fam_ipni[[i]]$family),
".xlsx"))
}
##collapsing the list in a df
df_ipni_families <- do.call("rbind.fill", list_fam_ipni) %>%
select(any_of(c("family", "genus", "species",
"authors", "citationType",
"rank", "hybrid", "reference",
"publication", "publicationYear",
"referenceCollation",
"publicationId", "suppressed",
"typeLocations", "collectorTeam",
"collectionNumber", "collectionDate1",
"distribution", "locality", "id",
"fqld", "inPowo", "wfold", "bhlLink",
"publicationYearNote", "remarks",
"referenceRemarks")))%>%
mutate(url = paste0("www.ipni.org/n/", list_fam_ipni[[i]]$id))
##collapsing the list in a df
df_ipni_families <- do.call("rbind.fill", list_fam_ipni) %>%
select(any_of(c("family", "genus", "species",
"authors", "citationType",
"rank", "hybrid", "reference",
"publication", "publicationYear",
"referenceCollation",
"publicationId", "suppressed",
"typeLocations", "collectorTeam",
"collectionNumber", "collectionDate1",
"distribution", "locality", "id",
"fqld", "inPowo", "wfold", "bhlLink",
"publicationYearNote", "remarks",
"referenceRemarks")))%>%
mutate(url = paste0("www.ipni.org/n/", id))
df_ipni_families$citationType <- "tax_nov"
df_ipni_families$source <- "ipni"
rownames(df_ipni_families) <- NULL
df_ipni_families$name <- str_c(df_ipni_families$genus,
df_ipni_families$species, sep = "_")
##eliminating duplicated species
df_ipni_families <- df_ipni_families[-which(duplicated(df_ipni_families$name)),]
##writing
write_csv(df_ipni_families,
file = "Data/Metadata/Angiosperms/ipni_2/ipni_fam_abs.csv")
##writing
write_csv(df_ipni_families,
file = "Data/Metadata/Angiosperms/ipni_abs/ipni_fam_abs.csv")
angiosperms_bra <- read_excel("Data/Raw/datasheet_angiosperms_07Nov2023.xlsx") %>%
fill(Família, Gênero) %>%
drop_na(Espécie) %>%
unite("taxon_name", Gênero:Espécie, sep = "_", remove = FALSE)
##libraries
library(tidyverse)
library(expowo)
library(readxl)
library(stringr)
library(plyr)
library(writexl)
angiosperms_bra <- read_excel("Data/Raw/datasheet_angiosperms_07Nov2023.xlsx") %>%
fill(Família, Gênero) %>%
drop_na(Espécie) %>%
unite("taxon_name", Gênero:Espécie, sep = "_", remove = FALSE)
##family names
fam_names <- unique(angiosperms_bra$Família)
######creating list for keeping the missing species within the families
list_fam_ang <- vector("list", length = length(fam_names))
##naming
names(list_fam_ang) <- fam_names
##loop for finding missing species in the Flora de Brasil
for(i in 1:50){
##subseting the angiosperm df
angio_fam = angiosperms_bra %>% filter(Família == fam_names[i])
###tryCatch for handling the missing families in POWO
tryCatch({
##calling the species within families in POWO
pow_df = powoSpecies(family = fam_names[i],
hybrid = TRUE,
synonyms = TRUE,
country = "Brazil")
return(pow_df)
}, error = function(e){
message("Absent family in POWO")
print(e)
})
##arranging taxa names
pow_df$taxon_name = str_replace(pow_df$taxon_name, " ", "_")
##POWO species absent in Flora de Brasil
pow_abs = pow_df[-which(pow_df$taxon_name %in% angio_fam$taxon_name), ]
##if else statement for not saving empty dfs
if(dim(pow_abs)[1] == 0){
print("No absent species in Flora de Brasil")
} else{
##Saving automatically in the metadata folder
write_xlsx(pow_abs, path = paste0("Data/Metadata/Angiosperms/expowo_abs/",
fam_names[i], ".csv"))
##inserting a df inside each list with the missing species in the Flora Brazil
list_fam_ang[[i]] = pow_abs
}
}
View(list_fam_ang)
list_fam_ang[["Anisophylleaceae"]]
fam_names
fam_names[16]
##loop for finding missing species in the Flora de Brasil
for(i in 16:50){
##subseting the angiosperm df
angio_fam = angiosperms_bra %>% filter(Família == fam_names[i])
###tryCatch for handling the missing families in POWO
tryCatch({
##calling the species within families in POWO
pow_df = powoSpecies(family = fam_names[i],
hybrid = TRUE,
synonyms = TRUE,
country = "Brazil")
return(pow_df)
}, error = function(e){
message("Absent family in POWO")
print(e)
})
##arranging taxa names
pow_df$taxon_name = str_replace(pow_df$taxon_name, " ", "_")
##POWO species absent in Flora de Brasil
pow_abs = pow_df[-which(pow_df$taxon_name %in% angio_fam$taxon_name), ]
##if else statement for not saving empty dfs
if(dim(pow_abs)[1] == 0){
print("No absent species in Flora de Brasil")
} else{
tryCatch({
##Saving automatically in the metadata folder
write_xlsx(pow_abs, path = paste0("Data/Metadata/Angiosperms/expowo_abs/",
fam_names[i], ".csv"))
##inserting a df inside each list with the missing species in the Flora Brazil
list_fam_ang[[i]] = pow_abs
}, error = function(e){
##Saving automatically in the metadata folder
write_csv(pow_abs, file = paste0("Data/Metadata/Angiosperms/expowo_abs/",
fam_names[i], ".csv"))
##inserting a df inside each list with the missing species in the Flora Brazil
list_fam_ang[[i]] = pow_abs
})
}
}
length(fam_names)
View(list_fam_ang)
fam_names[50]
##loop for finding missing species in the Flora de Brasil
for(i in 51:100){
##subseting the angiosperm df
angio_fam = angiosperms_bra %>% filter(Família == fam_names[i])
###tryCatch for handling the missing families in POWO
tryCatch({
##calling the species within families in POWO
pow_df = powoSpecies(family = fam_names[i],
hybrid = TRUE,
synonyms = TRUE,
country = "Brazil")
return(pow_df)
}, error = function(e){
message("Absent family in POWO")
print(e)
})
##arranging taxa names
pow_df$taxon_name = str_replace(pow_df$taxon_name, " ", "_")
##POWO species absent in Flora de Brasil
pow_abs = pow_df[-which(pow_df$taxon_name %in% angio_fam$taxon_name), ]
##if else statement for not saving empty dfs
if(dim(pow_abs)[1] == 0){
print("No absent species in Flora de Brasil")
} else{
tryCatch({
##Saving automatically in the metadata folder
write_xlsx(pow_abs, path = paste0("Data/Metadata/Angiosperms/expowo_abs/",
fam_names[i], ".csv"))
##inserting a df inside each list with the missing species in the Flora Brazil
list_fam_ang[[i]] = pow_abs
}, error = function(e){
##Saving automatically in the metadata folder
write_csv(pow_abs, file = paste0("Data/Metadata/Angiosperms/expowo_abs/",
fam_names[i], ".csv"))
##inserting a df inside each list with the missing species in the Flora Brazil
list_fam_ang[[i]] = pow_abs
})
}
}
library(expowo)
powoSpecies(family = fam_names[50], country = "Brazil")
library(expowo)
##libraries
library(tidyverse)
library(expowo)
library(readxl)
library(stringr)
library(plyr)
library(writexl)
View(list_fam_ang)
which(fam_names == "Asteraceae")
View(angiosperms_bra)
##loop for finding missing species in the Flora de Brasil
for(i in 28:100){
##subseting the angiosperm df
angio_fam = angiosperms_bra %>% filter(Família == fam_names[i])
###tryCatch for handling the missing families in POWO
tryCatch({
##calling the species within families in POWO
pow_df = powoSpecies(family = fam_names[i],
hybrid = TRUE,
synonyms = TRUE,
country = "Brazil")
return(pow_df)
}, error = function(e){
message("Absent family in POWO")
print(e)
})
##arranging taxa names
pow_df$taxon_name = str_replace(pow_df$taxon_name, " ", "_")
##POWO species absent in Flora de Brasil
pow_abs = pow_df[-which(pow_df$taxon_name %in% angio_fam$taxon_name), ]
##if else statement for not saving empty dfs
if(dim(pow_abs)[1] == 0){
print("No absent species in Flora de Brasil")
} else{
tryCatch({
##Saving automatically in the metadata folder
write_xlsx(pow_abs, path = paste0("Data/Metadata/Angiosperms/expowo_abs/",
fam_names[i], ".csv"))
##inserting a df inside each list with the missing species in the Flora Brazil
list_fam_ang[[i]] = pow_abs
}, error = function(e){
##Saving automatically in the metadata folder
write_csv(pow_abs, file = paste0("Data/Metadata/Angiosperms/expowo_abs/",
fam_names[i], ".csv"))
##inserting a df inside each list with the missing species in the Flora Brazil
list_fam_ang[[i]] = pow_abs
})
}
}
View(list_fam_ang)
##libraries
library(tidyverse)
library(expowo)
library(readxl)
library(stringr)
library(plyr)
library(writexl)
length(fam_names)
##loop for finding missing species in the Flora de Brasil
for(i in 151:200){
##subseting the angiosperm df
angio_fam = angiosperms_bra %>% filter(Família == fam_names[i])
###tryCatch for handling the missing families in POWO
tryCatch({
##calling the species within families in POWO
pow_df = powoSpecies(family = fam_names[i],
hybrid = TRUE,
synonyms = TRUE,
country = "Brazil")
return(pow_df)
}, error = function(e){
message("Absent family in POWO")
print(e)
})
##arranging taxa names
pow_df$taxon_name = str_replace(pow_df$taxon_name, " ", "_")
##POWO species absent in Flora de Brasil
pow_abs = pow_df[-which(pow_df$taxon_name %in% angio_fam$taxon_name), ]
##if else statement for not saving empty dfs
if(dim(pow_abs)[1] == 0){
print("No absent species in Flora de Brasil")
} else{
tryCatch({
##Saving automatically in the metadata folder
write_xlsx(pow_abs, path = paste0("Data/Metadata/Angiosperms/expowo_abs/",
fam_names[i], ".csv"))
##inserting a df inside each list with the missing species in the Flora Brazil
list_fam_ang[[i]] = pow_abs
}, error = function(e){
##Saving automatically in the metadata folder
write_csv(pow_abs, file = paste0("Data/Metadata/Angiosperms/expowo_abs/",
fam_names[i], ".csv"))
##inserting a df inside each list with the missing species in the Flora Brazil
list_fam_ang[[i]] = pow_abs
})
}
}
1500*24
View(list_fam_ang)
fam_ang
fam_names
which(fam_names == "Poaceae")
##loop for finding missing species in the Flora de Brasil
for(i in 200){
##subseting the angiosperm df
angio_fam = angiosperms_bra %>% filter(Família == fam_names[i])
###tryCatch for handling the missing families in POWO
tryCatch({
##calling the species within families in POWO
pow_df = powoSpecies(family = fam_names[i],
hybrid = TRUE,
synonyms = TRUE,
country = "Brazil")
return(pow_df)
}, error = function(e){
message("Absent family in POWO")
print(e)
})
##arranging taxa names
pow_df$taxon_name = str_replace(pow_df$taxon_name, " ", "_")
##POWO species absent in Flora de Brasil
pow_abs = pow_df[-which(pow_df$taxon_name %in% angio_fam$taxon_name), ]
##if else statement for not saving empty dfs
if(dim(pow_abs)[1] == 0){
print("No absent species in Flora de Brasil")
} else{
tryCatch({
##Saving automatically in the metadata folder
write_xlsx(pow_abs, path = paste0("Data/Metadata/Angiosperms/expowo_abs/",
fam_names[i], ".csv"))
##inserting a df inside each list with the missing species in the Flora Brazil
list_fam_ang[[i]] = pow_abs
}, error = function(e){
##Saving automatically in the metadata folder
write_csv(pow_abs, file = paste0("Data/Metadata/Angiosperms/expowo_abs/",
fam_names[i], ".csv"))
##inserting a df inside each list with the missing species in the Flora Brazil
list_fam_ang[[i]] = pow_abs
})
}
}
fam_names[200]
for(i in 200){}
for(i in 200){i}
for(i in 200){print(i)}
##loop for finding missing species in the Flora de Brasil
for(i in 200){
##subseting the angiosperm df
angio_fam = angiosperms_bra %>% filter(Família == fam_names[i])
###tryCatch for handling the missing families in POWO
tryCatch({
##calling the species within families in POWO
pow_df = powoSpecies(family = fam_names[i],
hybrid = TRUE,
synonyms = TRUE,
country = "Brazil")
return(pow_df)
}, error = function(e){
message("Absent family in POWO")
print(e)
})
##arranging taxa names
pow_df$taxon_name = str_replace(pow_df$taxon_name, " ", "_")
##POWO species absent in Flora de Brasil
pow_abs = pow_df[-which(pow_df$taxon_name %in% angio_fam$taxon_name), ]
##if else statement for not saving empty dfs
if(dim(pow_abs)[1] == 0){
print("No absent species in Flora de Brasil")
} else{
tryCatch({
##Saving automatically in the metadata folder
write_xlsx(pow_abs, path = paste0("Data/Metadata/Angiosperms/expowo_abs/",
fam_names[i], ".csv"))
##inserting a df inside each list with the missing species in the Flora Brazil
list_fam_ang[[i]] = pow_abs
}, error = function(e){
##Saving automatically in the metadata folder
write_csv(pow_abs, file = paste0("Data/Metadata/Angiosperms/expowo_abs/",
fam_names[i], ".csv"))
##inserting a df inside each list with the missing species in the Flora Brazil
list_fam_ang[[i]] = pow_abs
})
}
}
##calling the species within families in POWO
pow_df = powoSpecies(family = fam_names[200],
hybrid = TRUE,
synonyms = TRUE,
country = "Brazil")
##libraries
library(tidyverse)
library(expowo)
library(readxl)
fam_names[200]
which(fam_names == "Poaceae")
##libraries
library(tidyverse)
library(expowo)
library(readxl)
library(stringr)
library(plyr)
library(writexl)
View(list_fam_ang)
which(fam_names == "Poaceae")
##loop for finding missing species in the Flora de Brasil
for(i in 200){
##subseting the angiosperm df
angio_fam = angiosperms_bra %>% filter(Família == fam_names[i])
###tryCatch for handling the missing families in POWO
tryCatch({
##calling the species within families in POWO
pow_df = powoSpecies(family = fam_names[i],
hybrid = TRUE,
synonyms = TRUE,
country = "Brazil")
return(pow_df)
}, error = function(e){
message("Absent family in POWO")
print(e)
})
##arranging taxa names
pow_df$taxon_name = str_replace(pow_df$taxon_name, " ", "_")
##POWO species absent in Flora de Brasil
pow_abs = pow_df[-which(pow_df$taxon_name %in% angio_fam$taxon_name), ]
##if else statement for not saving empty dfs
if(dim(pow_abs)[1] == 0){
print("No absent species in Flora de Brasil")
} else{
tryCatch({
##Saving automatically in the metadata folder
write_xlsx(pow_abs, path = paste0("Data/Metadata/Angiosperms/expowo_abs/",
fam_names[i], ".csv"))
##inserting a df inside each list with the missing species in the Flora Brazil
list_fam_ang[[i]] = pow_abs
}, error = function(e){
##Saving automatically in the metadata folder
write_csv(pow_abs, file = paste0("Data/Metadata/Angiosperms/expowo_abs/",
fam_names[i], ".csv"))
##inserting a df inside each list with the missing species in the Flora Brazil
list_fam_ang[[i]] = pow_abs
})
}
}
